{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d8357b03",
   "metadata": {
    "papermill": {
     "duration": 0.006979,
     "end_time": "2025-09-24T23:09:38.081726",
     "exception": false,
     "start_time": "2025-09-24T23:09:38.074747",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# MJF-1B: Parkinson's Freezing of Gait Prediction\n",
    "\n",
    "Kaggle competition dataset: https://www.kaggle.com/competitions/tlvmc-parkinsons-freezing-gait-prediction/data\n",
    "\n",
    "Objective: \n",
    "To detect the start and stop of each freezing episode and the occurence in these series of three types of freezing of gait events:\n",
    "* Start Hesitation\n",
    "* Turn\n",
    "* Walking"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e53afbfe",
   "metadata": {
    "papermill": {
     "duration": 0.006773,
     "end_time": "2025-09-24T23:09:38.096031",
     "exception": false,
     "start_time": "2025-09-24T23:09:38.089258",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Milestone 1 & 2  \n",
    "\n",
    "Objectives: \n",
    "* Load and label data (attach patient_id)\n",
    "* Ensure consistent units (convert g → m/s²)\n",
    "* Apply a zero-phase band-pass filter (0.1 - 30 Hz) per patient.\n",
    "* Derive a directionless signal (Acc_MAGNITUDE)\n",
    "* Standardize channels per patient (z-score)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "157711d7",
   "metadata": {
    "papermill": {
     "duration": 0.006208,
     "end_time": "2025-09-24T23:09:38.109239",
     "exception": false,
     "start_time": "2025-09-24T23:09:38.103031",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Import Python Libraries\n",
    "* **numpy/pandas**: Numeric and tabular utilities\n",
    "* **polars**: Fast DataFrame ingestion and column ops\n",
    "* **matplotlib/seaborn**: Visualization\n",
    "* **scipy.signal**: Digital filter design and zero-phase\n",
    "* **pathlib/os**: File system handling\n",
    "* **sklearn**: StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d03f18c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:38.124553Z",
     "iopub.status.busy": "2025-09-24T23:09:38.124264Z",
     "iopub.status.idle": "2025-09-24T23:09:48.839586Z",
     "shell.execute_reply": "2025-09-24T23:09:48.838858Z"
    },
    "papermill": {
     "duration": 10.72409,
     "end_time": "2025-09-24T23:09:48.841368",
     "exception": false,
     "start_time": "2025-09-24T23:09:38.117278",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np                   \n",
    "import pandas as pd                 \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.signal import butter, filtfilt\n",
    "import tsfresh\n",
    "import os\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import polars as pl\n",
    "import dask.dataframe as dd\n",
    "from pathlib import Path            "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fec87c05",
   "metadata": {
    "papermill": {
     "duration": 0.004601,
     "end_time": "2025-09-24T23:09:48.850938",
     "exception": false,
     "start_time": "2025-09-24T23:09:48.846337",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Data Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "eda8748c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:48.861999Z",
     "iopub.status.busy": "2025-09-24T23:09:48.861073Z",
     "iopub.status.idle": "2025-09-24T23:09:48.865497Z",
     "shell.execute_reply": "2025-09-24T23:09:48.864811Z"
    },
    "papermill": {
     "duration": 0.011284,
     "end_time": "2025-09-24T23:09:48.866848",
     "exception": false,
     "start_time": "2025-09-24T23:09:48.855564",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# File paths for training datasets\n",
    "defog   = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/defog')\n",
    "notype  = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/notype')\n",
    "tdcsfog = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/tdcsfog')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9d174709",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:48.878846Z",
     "iopub.status.busy": "2025-09-24T23:09:48.878217Z",
     "iopub.status.idle": "2025-09-24T23:09:48.980236Z",
     "shell.execute_reply": "2025-09-24T23:09:48.979092Z"
    },
    "papermill": {
     "duration": 0.109924,
     "end_time": "2025-09-24T23:09:48.981728",
     "exception": false,
     "start_time": "2025-09-24T23:09:48.871804",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All competition datasets:\n",
      "['sample_submission.csv', 'unlabeled', 'subjects.csv', 'tasks.csv', 'defog_metadata.csv', 'daily_metadata.csv', 'test', 'events.csv', 'tdcsfog_metadata.csv', 'train']\n",
      "\n",
      "Folders in train:\n",
      "['defog', 'tdcsfog', 'notype']\n",
      "\n",
      "First 10 files in defog:\n",
      "['be9d33541d.csv', '4c3aa8ea6e.csv', '18e7abc37e.csv', '6a20935af5.csv', 'e642d9ea5f.csv', '3f3b08f78d.csv', '68e7e02a47.csv', 'f17eacf7d8.csv', '3f970065e5.csv', '7030643376.csv']\n",
      "Files remaining: 81\n",
      "\n",
      "First 10 files in tdcsfog:\n",
      "['a171e61840.csv', '4171ea3a0c.csv', '0f985a8440.csv', '5d320ade20.csv', 'ae8c67086b.csv', 'b7214cbf21.csv', 'e18fcafee8.csv', '79568b8e25.csv', 'feba449e1a.csv', '7ebad45aec.csv']\n",
      "Files remaining: 823\n",
      "\n",
      "First 10 files in notype:\n",
      "['1e8d55d48d.csv', '89e9ed32d1.csv', 'e5a0e226fe.csv', '1b3bc93401.csv', '34b979fc28.csv', '9cd837fd53.csv', '60f28aa837.csv', '02ab235146.csv', '6a886a3bb8.csv', '339c0cc15f.csv']\n",
      "Files remaining: 36\n"
     ]
    }
   ],
   "source": [
    "# List all files, folders, and subfolders\n",
    "all_files = os.listdir('../input/tlvmc-parkinsons-freezing-gait-prediction')\n",
    "print('All competition datasets:')\n",
    "print(all_files)\n",
    "\n",
    "print()\n",
    "\n",
    "train_files = os.listdir('../input/tlvmc-parkinsons-freezing-gait-prediction/train')\n",
    "print('Folders in train:')\n",
    "print(train_files)\n",
    "\n",
    "print() \n",
    "\n",
    "defog_files = os.listdir(defog)\n",
    "print('First 10 files in defog:')\n",
    "print(defog_files[:10])\n",
    "print(f'Files remaining: {len(defog_files)-10}')\n",
    "\n",
    "print() \n",
    "\n",
    "tdcsfog_files = os.listdir(tdcsfog)\n",
    "print('First 10 files in tdcsfog:')\n",
    "print(tdcsfog_files[:10])\n",
    "print(f'Files remaining: {len(tdcsfog_files)-10}')\n",
    "\n",
    "print() \n",
    "\n",
    "notype_files = os.listdir(notype)\n",
    "print('First 10 files in notype:')\n",
    "print(notype_files[:10])\n",
    "print(f'Files remaining: {len(notype_files)-10}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffd58e2d",
   "metadata": {
    "papermill": {
     "duration": 0.005249,
     "end_time": "2025-09-24T23:09:48.992075",
     "exception": false,
     "start_time": "2025-09-24T23:09:48.986826",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# General Helper Functions "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "16d11253",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:49.003894Z",
     "iopub.status.busy": "2025-09-24T23:09:49.003236Z",
     "iopub.status.idle": "2025-09-24T23:09:49.014705Z",
     "shell.execute_reply": "2025-09-24T23:09:49.013898Z"
    },
    "papermill": {
     "duration": 0.018994,
     "end_time": "2025-09-24T23:09:49.016014",
     "exception": false,
     "start_time": "2025-09-24T23:09:48.997020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def load_files(folder_path: Path) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Loads all CSVs from a folder into a single Polars DataFrame.\n",
    "    Adds patient_id from file filename. \n",
    "    \"\"\"\n",
    "    \n",
    "    df_list = []\n",
    "    for path in folder_path.glob(\"*.csv\"): \n",
    "        patient_id = path.stem\n",
    "        df = pl.read_csv(path)\n",
    "        df = df.with_columns(pl.lit(patient_id).alias(\"patient_id\"))\n",
    "        df_list.append(df)\n",
    "    return pl.concat(df_list) if df_list else pl.DataFrame()\n",
    "    \n",
    "\n",
    "def convert_valid_and_task(df: pl.DataFrame) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Cast Valid and Task columns to Int8 if present.\n",
    "    \"\"\"\n",
    "    out = df\n",
    "    if \"Valid\" in out.columns:\n",
    "        out = out.with_columns(pl.col(\"Valid\").cast(pl.Int8).alias(\"Valid\"))\n",
    "    if \"Task\" in out.columns:\n",
    "        out = out.with_columns(pl.col(\"Task\").cast(pl.Int8).alias(\"Task\"))\n",
    "    return out\n",
    "    \n",
    "\n",
    "def add_acc_magnitude(df: pl.DataFrame) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Acc magnitude = sqrt(AccV^2 + AccML^2 + AccAP^2).\n",
    "    \"\"\"\n",
    "    \n",
    "    return df.with_columns(\n",
    "        ((pl.col(\"AccV\")**2 + pl.col(\"AccML\")**2 + pl.col(\"AccAP\")**2).sqrt())\n",
    "        .alias(\"Acc_MAGNITUDE\")\n",
    "    )\n",
    "\n",
    "\n",
    "def standardize_acc_by_patient(df: pl.DataFrame) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Z-score AccV/AccML/AccAP per patient_id.\n",
    "    \"\"\"\n",
    "    \n",
    "    acc_cols = [\"AccV\", \"AccML\", \"AccAP\"]\n",
    "    out = df\n",
    "    for col in acc_cols:\n",
    "        if col in out.columns:\n",
    "            out = out.with_columns(\n",
    "                ((pl.col(col) - pl.col(col).mean().over(\"patient_id\")) /\n",
    "                 pl.col(col).std().over(\"patient_id\")).alias(col)\n",
    "            )\n",
    "    return out\n",
    "\n",
    "def detect_outliers(df: pl.DataFrame, z_thresh: float = 3.0) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Return rows where any accel channel has |z| > z_thresh (after standardization).\n",
    "    \"\"\"\n",
    "    \n",
    "    acc_cols = [\"AccV\", \"AccML\", \"AccAP\"]\n",
    "    # Build a boolean mask across columns that exist\n",
    "    masks = []\n",
    "    for c in acc_cols:\n",
    "        if c in df.columns:\n",
    "            masks.append(pl.col(c).abs() > z_thresh)\n",
    "    return df.filter(pl.any_horizontal(masks)) if masks else df.head(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0509839",
   "metadata": {
    "papermill": {
     "duration": 0.004482,
     "end_time": "2025-09-24T23:09:49.025760",
     "exception": false,
     "start_time": "2025-09-24T23:09:49.021278",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Filtering Helper Functions \n",
    "* Low-cut (0.1 Hz) removes drift/sensor bias (very slow trends)\n",
    "* High-cut (30 Hz) removes strap/device noise (sudden spikes)\n",
    "* filtfilt: (forward+backward) yields zero phase → no event time shift.\n",
    "\n",
    "We infer sampling frequency from the *Time* column to adapt to slight rate differences "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2bf1bffe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:49.036515Z",
     "iopub.status.busy": "2025-09-24T23:09:49.036231Z",
     "iopub.status.idle": "2025-09-24T23:09:49.048533Z",
     "shell.execute_reply": "2025-09-24T23:09:49.047788Z"
    },
    "papermill": {
     "duration": 0.019456,
     "end_time": "2025-09-24T23:09:49.049834",
     "exception": false,
     "start_time": "2025-09-24T23:09:49.030378",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def infer_fs(time_series: np.ndarray) -> float:\n",
    "    \"\"\"\n",
    "    Infer sampling frequency (Hz) from a time array (seconds) using median Δt.\n",
    "    \"\"\"\n",
    "    \n",
    "    # Avoid zeros / NaNs\n",
    "    dt = np.diff(time_series.astype(float))\n",
    "    dt = dt[np.isfinite(dt) & (dt > 0)]\n",
    "    if dt.size == 0:\n",
    "        raise ValueError(\"Cannot infer sampling frequency from Time column.\")\n",
    "    return 1.0 / np.median(dt)\n",
    "\n",
    "\n",
    "def butter_bandpass(low_hz: float, high_hz: float, fs: float, order: int = 4):\n",
    "    \"\"\"\n",
    "    Design a Butterworth band-pass filter.\n",
    "    \"\"\"\n",
    "    \n",
    "    nyq = fs / 2.0\n",
    "    low = max(1e-6, low_hz / nyq)\n",
    "    high = min(0.999999, high_hz / nyq)\n",
    "    if high <= low:\n",
    "        raise ValueError(f\"Invalid band: low={low_hz}Hz, high={high_hz}Hz for fs={fs}Hz\")\n",
    "    b, a = butter(order, [low, high], btype=\"band\")\n",
    "    return b, a\n",
    "\n",
    "\n",
    "\n",
    "def apply_bandpass_to_polars(df: pl.DataFrame, low_hz: float = 0.1, high_hz: float = 30.0, order: int = 4) -> pl.DataFrame:\n",
    "    \"\"\"\n",
    "    Apply band-pass filter to AccV/AccML/AccAP per patient using scipy.signal.filtfilt.\n",
    "    We convert each patient's slice to pandas to interpolate small gaps, filter, then write back.\n",
    "    Sampling frequency is inferred from Time (seconds).\n",
    "    \"\"\"\n",
    "    needed = [\"Time\", \"patient_id\", \"AccV\", \"AccML\", \"AccAP\"]\n",
    "    for col in [\"Time\", \"patient_id\"]:\n",
    "        if col not in df.columns:\n",
    "            raise ValueError(f\"'{col}' must be present to filter.\")\n",
    "    # Work columns that actually exist\n",
    "    acc_cols = [c for c in [\"AccV\", \"AccML\", \"AccAP\"] if c in df.columns]\n",
    "    if not acc_cols:\n",
    "        return df\n",
    "\n",
    "    # Process per patient to keep borders clean for filtfilt\n",
    "    out_slices = []\n",
    "    for pid, pdf in df.select(needed).to_pandas().groupby(\"patient_id\", sort=False):\n",
    "        # Ensure sorted by time\n",
    "        pdf = pdf.sort_values(\"Time\", kind=\"mergesort\")\n",
    "        fs = infer_fs(pdf[\"Time\"].to_numpy())\n",
    "        b, a = butter_bandpass(low_hz, high_hz, fs, order)\n",
    "\n",
    "        # Interpolate small gaps and filter each channel\n",
    "        for col in acc_cols:\n",
    "            # to_numeric + interpolate to avoid NaNs breaking filtfilt\n",
    "            sig = pd.to_numeric(pdf[col], errors=\"coerce\").interpolate(limit_direction=\"both\").to_numpy(dtype=float)\n",
    "            # If the segment is too short, skip filtering\n",
    "            if sig.size > max(3 * max(len(b), len(a)), 20):\n",
    "                sig_f = filtfilt(b, a, sig, method=\"pad\")\n",
    "            else:\n",
    "                sig_f = sig\n",
    "            pdf[col] = sig_f\n",
    "\n",
    "        out_slices.append(pdf)\n",
    "\n",
    "    # Merge all filtered patient slices back\n",
    "    filtered_pd = pd.concat(out_slices, ignore_index=True)\n",
    "\n",
    "    # Join the filtered columns back onto original Polars df (keeping any extra columns intact)\n",
    "    filtered_pl = pl.from_pandas(filtered_pd[[\"Time\", \"patient_id\"] + acc_cols])\n",
    "    out = df.join(filtered_pl, on=[\"Time\", \"patient_id\"], how=\"left\", suffix=\"_f\")\n",
    "    # Overwrite originals with filtered where available\n",
    "    for col in acc_cols:\n",
    "        fcol = f\"{col}_f\"\n",
    "        out = out.with_columns(\n",
    "            pl.when(pl.col(fcol).is_not_null()).then(pl.col(fcol)).otherwise(pl.col(col)).alias(col)\n",
    "        ).drop(fcol)\n",
    "    return out\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1893021a",
   "metadata": {
    "papermill": {
     "duration": 0.004593,
     "end_time": "2025-09-24T23:09:49.059444",
     "exception": false,
     "start_time": "2025-09-24T23:09:49.054851",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load training dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e19116c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:09:49.070399Z",
     "iopub.status.busy": "2025-09-24T23:09:49.069659Z",
     "iopub.status.idle": "2025-09-24T23:10:41.919176Z",
     "shell.execute_reply": "2025-09-24T23:10:41.918176Z"
    },
    "papermill": {
     "duration": 52.856726,
     "end_time": "2025-09-24T23:10:41.920860",
     "exception": false,
     "start_time": "2025-09-24T23:09:49.064134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "defog_df   = load_files(defog)\n",
    "notype_df  = load_files(notype)\n",
    "tdcsfog_df = load_files(tdcsfog)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44bfb6ee",
   "metadata": {
    "papermill": {
     "duration": 0.004591,
     "end_time": "2025-09-24T23:10:41.930470",
     "exception": false,
     "start_time": "2025-09-24T23:10:41.925879",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Review Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7fbf8cde",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:10:41.941362Z",
     "iopub.status.busy": "2025-09-24T23:10:41.941049Z",
     "iopub.status.idle": "2025-09-24T23:10:46.102519Z",
     "shell.execute_reply": "2025-09-24T23:10:46.101334Z"
    },
    "papermill": {
     "duration": 4.168799,
     "end_time": "2025-09-24T23:10:46.104036",
     "exception": false,
     "start_time": "2025-09-24T23:10:41.935237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (5, 10)\n",
      "┌──────┬───────────┬──────────┬──────────┬───┬─────────┬───────┬───────┬────────────┐\n",
      "│ Time ┆ AccV      ┆ AccML    ┆ AccAP    ┆ … ┆ Walking ┆ Valid ┆ Task  ┆ patient_id │\n",
      "│ ---  ┆ ---       ┆ ---      ┆ ---      ┆   ┆ ---     ┆ ---   ┆ ---   ┆ ---        │\n",
      "│ i64  ┆ f64       ┆ f64      ┆ f64      ┆   ┆ i64     ┆ bool  ┆ bool  ┆ str        │\n",
      "╞══════╪═══════════╪══════════╪══════════╪═══╪═════════╪═══════╪═══════╪════════════╡\n",
      "│ 0    ┆ -1.002697 ┆ 0.022371 ┆ 0.068304 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 1    ┆ -1.002641 ┆ 0.019173 ┆ 0.066162 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 2    ┆ -0.99982  ┆ 0.019142 ┆ 0.067536 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 3    ┆ -0.998023 ┆ 0.018378 ┆ 0.068409 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 4    ┆ -0.998359 ┆ 0.016726 ┆ 0.066448 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "└──────┴───────────┴──────────┴──────────┴───┴─────────┴───────┴───────┴────────────┘\n",
      "shape: (9, 11)\n",
      "┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n",
      "│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ Walking   ┆ Valid     ┆ Task      ┆ patient_ │\n",
      "│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ ---       ┆ ---       ┆ id       │\n",
      "│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ f64       ┆ f64       ┆ f64       ┆ ---      │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ str      │\n",
      "╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n",
      "│ count     ┆ 1.3525702 ┆ 1.3525702 ┆ 1.3525702 ┆ … ┆ 1.3525702 ┆ 1.3525702 ┆ 1.3525702 ┆ 13525702 │\n",
      "│           ┆ e7        ┆ e7        ┆ e7        ┆   ┆ e7        ┆ e7        ┆ e7        ┆          │\n",
      "│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n",
      "│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ mean      ┆ 86611.589 ┆ -0.940173 ┆ 0.001173  ┆ … ┆ 0.007284  ┆ 0.302426  ┆ 0.306526  ┆ null     │\n",
      "│           ┆ 61        ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ std       ┆ 64791.572 ┆ 0.086065  ┆ 0.120008  ┆ … ┆ 0.085034  ┆ null      ┆ null      ┆ null     │\n",
      "│           ┆ 173       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ min       ┆ 0.0       ┆ -6.024701 ┆ -4.059201 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 02ea7826 │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 81       │\n",
      "│ 25%       ┆ 37256.0   ┆ -0.986571 ┆ -0.0625   ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ 50%       ┆ 75149.0   ┆ -0.953125 ┆ 0.002385  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ 75%       ┆ 121179.0  ┆ -0.90625  ┆ 0.078125  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ max       ┆ 415387.0  ┆ 4.458365  ┆ 4.524038  ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ f9fc61ce │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 85       │\n",
      "└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\n",
      "(13525702, 10)\n",
      "['Time', 'AccV', 'AccML', 'AccAP', 'StartHesitation', 'Turn', 'Walking', 'Valid', 'Task', 'patient_id']\n",
      "[Int64, Float64, Float64, Float64, Int64, Int64, Int64, Boolean, Boolean, String]\n",
      "shape: (5, 8)\n",
      "┌──────┬───────────┬───────────┬──────────┬───────┬───────┬───────┬────────────┐\n",
      "│ Time ┆ AccV      ┆ AccML     ┆ AccAP    ┆ Event ┆ Valid ┆ Task  ┆ patient_id │\n",
      "│ ---  ┆ ---       ┆ ---       ┆ ---      ┆ ---   ┆ ---   ┆ ---   ┆ ---        │\n",
      "│ i64  ┆ f64       ┆ f64       ┆ f64      ┆ i64   ┆ bool  ┆ bool  ┆ str        │\n",
      "╞══════╪═══════════╪═══════════╪══════════╪═══════╪═══════╪═══════╪════════════╡\n",
      "│ 0    ┆ -0.991926 ┆ -0.119916 ┆ 0.050087 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 1    ┆ -0.994243 ┆ -0.118624 ┆ 0.049909 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 2    ┆ -0.99584  ┆ -0.118602 ┆ 0.048774 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 3    ┆ -0.995865 ┆ -0.121627 ┆ 0.04809  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 4    ┆ -0.99233  ┆ -0.122146 ┆ 0.048878 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "└──────┴───────────┴───────────┴──────────┴───────┴───────┴───────┴────────────┘\n",
      "(10251114, 8)\n",
      "['Time', 'AccV', 'AccML', 'AccAP', 'Event', 'Valid', 'Task', 'patient_id']\n",
      "[Int64, Float64, Float64, Float64, Int64, Boolean, Boolean, String]\n",
      "shape: (9, 9)\n",
      "┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n",
      "│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ Event     ┆ Valid     ┆ Task      ┆ patient_ │\n",
      "│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ ---       ┆ ---       ┆ id       │\n",
      "│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ f64       ┆ f64       ┆ f64       ┆ ---      │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ str      │\n",
      "╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n",
      "│ count     ┆ 1.0251114 ┆ 1.0251114 ┆ 1.0251114 ┆ … ┆ 1.0251114 ┆ 1.0251114 ┆ 1.0251114 ┆ 10251114 │\n",
      "│           ┆ e7        ┆ e7        ┆ e7        ┆   ┆ e7        ┆ e7        ┆ e7        ┆          │\n",
      "│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n",
      "│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ mean      ┆ 123128.63 ┆ -0.932382 ┆ -0.07878  ┆ … ┆ 0.048702  ┆ 0.331116  ┆ 0.334288  ┆ null     │\n",
      "│           ┆ 4988      ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ std       ┆ 84077.542 ┆ 0.086195  ┆ 0.126094  ┆ … ┆ 0.215243  ┆ null      ┆ null      ┆ null     │\n",
      "│           ┆ 879       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ min       ┆ 0.0       ┆ -5.738525 ┆ -3.625081 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 02ab2351 │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 46       │\n",
      "│ 25%       ┆ 55712.0   ┆ -0.979533 ┆ -0.15462  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ 50%       ┆ 111533.0  ┆ -0.945709 ┆ -0.07047  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ 75%       ┆ 175592.0  ┆ -0.890877 ┆ -0.006932 ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n",
      "│ max       ┆ 443495.0  ┆ 1.223533  ┆ 4.328019  ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ e8e530a4 │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ f9       │\n",
      "└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\n",
      "shape: (5, 8)\n",
      "┌──────┬───────────┬──────────┬──────────┬─────────────────┬──────┬─────────┬────────────┐\n",
      "│ Time ┆ AccV      ┆ AccML    ┆ AccAP    ┆ StartHesitation ┆ Turn ┆ Walking ┆ patient_id │\n",
      "│ ---  ┆ ---       ┆ ---      ┆ ---      ┆ ---             ┆ ---  ┆ ---     ┆ ---        │\n",
      "│ i64  ┆ f64       ┆ f64      ┆ f64      ┆ i64             ┆ i64  ┆ i64     ┆ str        │\n",
      "╞══════╪═══════════╪══════════╪══════════╪═════════════════╪══════╪═════════╪════════════╡\n",
      "│ 0    ┆ -9.66589  ┆ 0.04255  ┆ 0.184744 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 1    ┆ -9.672969 ┆ 0.049217 ┆ 0.184644 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 2    ┆ -9.67026  ┆ 0.03362  ┆ 0.19379  ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 3    ┆ -9.673356 ┆ 0.035159 ┆ 0.184369 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 4    ┆ -9.671458 ┆ 0.043913 ┆ 0.197814 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "└──────┴───────────┴──────────┴──────────┴─────────────────┴──────┴─────────┴────────────┘\n",
      "(7062672, 8)\n",
      "['Time', 'AccV', 'AccML', 'AccAP', 'StartHesitation', 'Turn', 'Walking', 'patient_id']\n",
      "[Int64, Float64, Float64, Float64, Int64, Int64, Int64, String]\n",
      "shape: (9, 9)\n",
      "┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n",
      "│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ StartHesi ┆ Turn      ┆ Walking   ┆ patient_ │\n",
      "│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ tation    ┆ ---       ┆ ---       ┆ id       │\n",
      "│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ ---       ┆ f64       ┆ f64       ┆ ---      │\n",
      "│           ┆           ┆           ┆           ┆   ┆ f64       ┆           ┆           ┆ str      │\n",
      "╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n",
      "│ count     ┆ 7.062672e ┆ 7.062672e ┆ 7.062672e ┆ … ┆ 7.062672e ┆ 7.062672e ┆ 7.062672e ┆ 7062672  │\n",
      "│           ┆ 6         ┆ 6         ┆ 6         ┆   ┆ 6         ┆ 6         ┆ 6         ┆          │\n",
      "│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n",
      "│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ mean      ┆ 9289.4672 ┆ -9.306317 ┆ -0.201251 ┆ … ┆ 0.043155  ┆ 0.237698  ┆ 0.029428  ┆ null     │\n",
      "│           ┆ 97        ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ std       ┆ 13998.925 ┆ 1.080174  ┆ 1.269525  ┆ … ┆ 0.203206  ┆ 0.425673  ┆ 0.169002  ┆ null     │\n",
      "│           ┆ 696       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n",
      "│ min       ┆ 0.0       ┆ -35.52111 ┆ -26.16439 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 003f117e │\n",
      "│           ┆           ┆ 9         ┆ 8         ┆   ┆           ┆           ┆           ┆ 14       │\n",
      "│ 25%       ┆ 2119.0    ┆ -9.762402 ┆ -0.929545 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n",
      "│ 50%       ┆ 4310.0    ┆ -9.363524 ┆ -0.172224 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n",
      "│ 75%       ┆ 8433.0    ┆ -8.776815 ┆ 0.575211  ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n",
      "│ max       ┆ 97076.0   ┆ 20.906953 ┆ 27.484719 ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ ffda8fad │\n",
      "│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ fd       │\n",
      "└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\n",
      "           Id      Init  Completion  Type  Kinetic\n",
      "0  003f117e14   8.61312     14.7731  Turn      1.0\n",
      "1  009ee11563  11.38470     41.1847  Turn      1.0\n",
      "2  009ee11563  54.66470     58.7847  Turn      1.0\n",
      "3  011322847a  28.09660     30.2966  Turn      1.0\n",
      "4  01d0fe7266  30.31840     31.8784  Turn      1.0\n",
      "(3544, 5)\n",
      "Index(['Id', 'Init', 'Completion', 'Type', 'Kinetic'], dtype='object')\n",
      "Id             object\n",
      "Init          float64\n",
      "Completion    float64\n",
      "Type           object\n",
      "Kinetic       float64\n",
      "dtype: object\n",
      "              Init   Completion      Kinetic\n",
      "count  3544.000000  3544.000000  2502.000000\n",
      "mean    956.298418   964.489046     0.817746\n",
      "std     946.357201   943.968560     0.386131\n",
      "min     -30.669000   -29.719000     0.000000\n",
      "25%      39.518175    48.610800     1.000000\n",
      "50%     768.656500   774.261000     1.000000\n",
      "75%    1570.300000  1576.697250     1.000000\n",
      "max    4381.217000  4392.745000     1.000000\n",
      "shape: (91,)\n",
      "Series: 'patient_id' [str]\n",
      "[\n",
      "\t\"139f60d29b\"\n",
      "\t\"32843e32b6\"\n",
      "\t\"2e75cf4507\"\n",
      "\t\"771d69d829\"\n",
      "\t\"a057215d88\"\n",
      "\t…\n",
      "\t\"77d7d95074\"\n",
      "\t\"dd0ddc0bb5\"\n",
      "\t\"5327e062c9\"\n",
      "\t\"f17eacf7d8\"\n",
      "\t\"97e44fa8c3\"\n",
      "]\n"
     ]
    }
   ],
   "source": [
    "print(defog_df.head())\n",
    "print(defog_df.describe())\n",
    "print(defog_df.shape)\n",
    "print(defog_df.columns)\n",
    "print(defog_df.dtypes)\n",
    "\n",
    "print(notype_df.head())\n",
    "print(notype_df.shape)\n",
    "print(notype_df.columns)\n",
    "print(notype_df.dtypes)\n",
    "print(notype_df.describe())\n",
    "\n",
    "print(tdcsfog_df.head())\n",
    "print(tdcsfog_df.shape)\n",
    "print(tdcsfog_df.columns)\n",
    "print(tdcsfog_df.dtypes)\n",
    "print(tdcsfog_df.describe())\n",
    "\n",
    "events_df = pd.read_csv('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/events.csv')\n",
    "print(events_df.head())\n",
    "print(events_df.shape)\n",
    "print(events_df.columns)\n",
    "print(events_df.dtypes)\n",
    "print(events_df.describe())\n",
    "\n",
    "unique_defog_patients = defog_df[\"patient_id\"].unique()\n",
    "print(unique_defog_patients)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84785f52",
   "metadata": {
    "papermill": {
     "duration": 0.005116,
     "end_time": "2025-09-24T23:10:46.114695",
     "exception": false,
     "start_time": "2025-09-24T23:10:46.109579",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Unit Conversions \n",
    "* (g -> m/s^2) for ALL training datasets\n",
    "* Models expect consistent physical units"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6cbd1759",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:10:46.126807Z",
     "iopub.status.busy": "2025-09-24T23:10:46.126077Z",
     "iopub.status.idle": "2025-09-24T23:10:46.996596Z",
     "shell.execute_reply": "2025-09-24T23:10:46.995668Z"
    },
    "papermill": {
     "duration": 0.878532,
     "end_time": "2025-09-24T23:10:46.998564",
     "exception": false,
     "start_time": "2025-09-24T23:10:46.120032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (13_525_702, 10)\n",
      "┌────────┬───────────┬──────────┬───────────┬───┬─────────┬───────┬───────┬────────────┐\n",
      "│ Time   ┆ AccV      ┆ AccML    ┆ AccAP     ┆ … ┆ Walking ┆ Valid ┆ Task  ┆ patient_id │\n",
      "│ ---    ┆ ---       ┆ ---      ┆ ---       ┆   ┆ ---     ┆ ---   ┆ ---   ┆ ---        │\n",
      "│ i64    ┆ f64       ┆ f64      ┆ f64       ┆   ┆ i64     ┆ bool  ┆ bool  ┆ str        │\n",
      "╞════════╪═══════════╪══════════╪═══════════╪═══╪═════════╪═══════╪═══════╪════════════╡\n",
      "│ 0      ┆ -9.833101 ┆ 0.219382 ┆ 0.669832  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 1      ┆ -9.832554 ┆ 0.188024 ┆ 0.648829  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 2      ┆ -9.804885 ┆ 0.187721 ┆ 0.662298  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 3      ┆ -9.787264 ┆ 0.180227 ┆ 0.670866  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ 4      ┆ -9.790555 ┆ 0.164025 ┆ 0.651633  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n",
      "│ …      ┆ …         ┆ …        ┆ …         ┆ … ┆ …       ┆ …     ┆ …     ┆ …          │\n",
      "│ 109120 ┆ -9.210807 ┆ 0.30954  ┆ -3.871049 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n",
      "│ 109121 ┆ -9.228995 ┆ 0.309714 ┆ -3.850343 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n",
      "│ 109122 ┆ -9.219534 ┆ 0.285297 ┆ -3.867594 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n",
      "│ 109123 ┆ -9.216992 ┆ 0.27516  ┆ -3.909563 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n",
      "│ 109124 ┆ -9.208502 ┆ 0.261129 ┆ -3.907498 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n",
      "└────────┴───────────┴──────────┴───────────┴───┴─────────┴───────┴───────┴────────────┘\n",
      "shape: (10_251_114, 8)\n",
      "┌────────┬───────────┬───────────┬───────────┬───────┬───────┬───────┬────────────┐\n",
      "│ Time   ┆ AccV      ┆ AccML     ┆ AccAP     ┆ Event ┆ Valid ┆ Task  ┆ patient_id │\n",
      "│ ---    ┆ ---       ┆ ---       ┆ ---       ┆ ---   ┆ ---   ┆ ---   ┆ ---        │\n",
      "│ i64    ┆ f64       ┆ f64       ┆ f64       ┆ i64   ┆ bool  ┆ bool  ┆ str        │\n",
      "╞════════╪═══════════╪═══════════╪═══════════╪═══════╪═══════╪═══════╪════════════╡\n",
      "│ 0      ┆ -9.727468 ┆ -1.175975 ┆ 0.491184  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 1      ┆ -9.750189 ┆ -1.163302 ┆ 0.489444  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 2      ┆ -9.765857 ┆ -1.163087 ┆ 0.478313  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 3      ┆ -9.766098 ┆ -1.192753 ┆ 0.471599  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ 4      ┆ -9.731436 ┆ -1.19784  ┆ 0.479333  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n",
      "│ …      ┆ …         ┆ …         ┆ …         ┆ …     ┆ …     ┆ …     ┆ …          │\n",
      "│ 443491 ┆ -8.336771 ┆ -1.537457 ┆ -4.896186 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n",
      "│ 443492 ┆ -8.309133 ┆ -1.583071 ┆ -4.873271 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n",
      "│ 443493 ┆ -8.298749 ┆ -1.609258 ┆ -4.858621 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n",
      "│ 443494 ┆ -8.271171 ┆ -1.608903 ┆ -4.858399 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n",
      "│ 443495 ┆ -8.237273 ┆ -1.585128 ┆ -4.865256 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n",
      "└────────┴───────────┴───────────┴───────────┴───────┴───────┴───────┴────────────┘\n",
      "shape: (7_062_672, 8)\n",
      "┌──────┬────────────┬───────────┬────────────┬─────────────────┬──────┬─────────┬────────────┐\n",
      "│ Time ┆ AccV       ┆ AccML     ┆ AccAP      ┆ StartHesitation ┆ Turn ┆ Walking ┆ patient_id │\n",
      "│ ---  ┆ ---        ┆ ---       ┆ ---        ┆ ---             ┆ ---  ┆ ---     ┆ ---        │\n",
      "│ i64  ┆ f64        ┆ f64       ┆ f64        ┆ i64             ┆ i64  ┆ i64     ┆ str        │\n",
      "╞══════╪════════════╪═══════════╪════════════╪═════════════════╪══════╪═════════╪════════════╡\n",
      "│ 0    ┆ -94.79     ┆ 0.417272  ┆ 1.811716   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 1    ┆ -94.85942  ┆ 0.48265   ┆ 1.810744   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 2    ┆ -94.832859 ┆ 0.329699  ┆ 1.900435   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 3    ┆ -94.863213 ┆ 0.344791  ┆ 1.808046   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ 4    ┆ -94.844599 ┆ 0.430635  ┆ 1.939889   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n",
      "│ …    ┆ …          ┆ …         ┆ …          ┆ …               ┆ …    ┆ …       ┆ …          │\n",
      "│ 5153 ┆ -97.241955 ┆ -1.038494 ┆ -11.017327 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n",
      "│ 5154 ┆ -95.063238 ┆ -0.655982 ┆ -10.933467 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n",
      "│ 5155 ┆ -93.635049 ┆ -0.964145 ┆ -10.906198 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n",
      "│ 5156 ┆ -92.867045 ┆ -1.088582 ┆ -11.089498 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n",
      "│ 5157 ┆ -93.813537 ┆ -1.116631 ┆ -10.8202   ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n",
      "└──────┴────────────┴───────────┴────────────┴─────────────────┴──────┴─────────┴────────────┘\n"
     ]
    }
   ],
   "source": [
    "G_CONVERSION = 9.80665\n",
    "for df_name in [\"defog_df\", \"notype_df\", \"tdcsfog_df\"]:\n",
    "    df_tmp = locals()[df_name]\n",
    "    acc_cols = [c for c in [\"AccV\", \"AccML\", \"AccAP\"] if c in df_tmp.columns]\n",
    "    if acc_cols:\n",
    "        # Multiply in-place using with_columns to avoid SettingWithCopy issues\n",
    "        locals()[df_name] = df_tmp.with_columns([ (pl.col(c) * G_CONVERSION).alias(c) for c in acc_cols ])\n",
    "\n",
    "print(defog_df)\n",
    "print(notype_df)\n",
    "print(tdcsfog_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0572c247",
   "metadata": {
    "papermill": {
     "duration": 0.005659,
     "end_time": "2025-09-24T23:10:47.010191",
     "exception": false,
     "start_time": "2025-09-24T23:10:47.004532",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Cast Valid/Task to integers where present"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "37053d2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:10:47.021939Z",
     "iopub.status.busy": "2025-09-24T23:10:47.021608Z",
     "iopub.status.idle": "2025-09-24T23:10:47.242408Z",
     "shell.execute_reply": "2025-09-24T23:10:47.241143Z"
    },
    "papermill": {
     "duration": 0.228317,
     "end_time": "2025-09-24T23:10:47.243792",
     "exception": false,
     "start_time": "2025-09-24T23:10:47.015475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (13_525_702, 10)\n",
      "┌────────┬───────────┬──────────┬───────────┬───┬─────────┬───────┬──────┬────────────┐\n",
      "│ Time   ┆ AccV      ┆ AccML    ┆ AccAP     ┆ … ┆ Walking ┆ Valid ┆ Task ┆ patient_id │\n",
      "│ ---    ┆ ---       ┆ ---      ┆ ---       ┆   ┆ ---     ┆ ---   ┆ ---  ┆ ---        │\n",
      "│ i64    ┆ f64       ┆ f64      ┆ f64       ┆   ┆ i64     ┆ i8    ┆ i8   ┆ str        │\n",
      "╞════════╪═══════════╪══════════╪═══════════╪═══╪═════════╪═══════╪══════╪════════════╡\n",
      "│ 0      ┆ -9.833101 ┆ 0.219382 ┆ 0.669832  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n",
      "│ 1      ┆ -9.832554 ┆ 0.188024 ┆ 0.648829  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n",
      "│ 2      ┆ -9.804885 ┆ 0.187721 ┆ 0.662298  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n",
      "│ 3      ┆ -9.787264 ┆ 0.180227 ┆ 0.670866  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n",
      "│ 4      ┆ -9.790555 ┆ 0.164025 ┆ 0.651633  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n",
      "│ …      ┆ …         ┆ …        ┆ …         ┆ … ┆ …       ┆ …     ┆ …    ┆ …          │\n",
      "│ 109120 ┆ -9.210807 ┆ 0.30954  ┆ -3.871049 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n",
      "│ 109121 ┆ -9.228995 ┆ 0.309714 ┆ -3.850343 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n",
      "│ 109122 ┆ -9.219534 ┆ 0.285297 ┆ -3.867594 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n",
      "│ 109123 ┆ -9.216992 ┆ 0.27516  ┆ -3.909563 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n",
      "│ 109124 ┆ -9.208502 ┆ 0.261129 ┆ -3.907498 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n",
      "└────────┴───────────┴──────────┴───────────┴───┴─────────┴───────┴──────┴────────────┘\n"
     ]
    }
   ],
   "source": [
    "defog_df   = convert_valid_and_task(defog_df)\n",
    "notype_df  = convert_valid_and_task(notype_df)\n",
    "tdcsfog_df = convert_valid_and_task(tdcsfog_df)\n",
    "print(defog_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "177f96d6",
   "metadata": {
    "papermill": {
     "duration": 0.005314,
     "end_time": "2025-09-24T23:10:47.255189",
     "exception": false,
     "start_time": "2025-09-24T23:10:47.249875",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Band-pass filter per patient \n",
    "* Removes slow drift (<0.1 Hz) and high-frequency noise (>30 Hz) while preserving gait content.\n",
    "* Uses zero-phase filtering to keep temporal alignmnet with labels/events. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ceb595d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:10:47.267474Z",
     "iopub.status.busy": "2025-09-24T23:10:47.267180Z",
     "iopub.status.idle": "2025-09-24T23:11:17.131921Z",
     "shell.execute_reply": "2025-09-24T23:11:17.130867Z"
    },
    "papermill": {
     "duration": 29.872991,
     "end_time": "2025-09-24T23:11:17.133656",
     "exception": false,
     "start_time": "2025-09-24T23:10:47.260665",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "defog_df   = apply_bandpass_to_polars(defog_df,   low_hz=0.1, high_hz=30.0, order=4)\n",
    "notype_df  = apply_bandpass_to_polars(notype_df,  low_hz=0.1, high_hz=30.0, order=4)\n",
    "tdcsfog_df = apply_bandpass_to_polars(tdcsfog_df, low_hz=0.1, high_hz=30.0, order=4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a63d5183",
   "metadata": {
    "papermill": {
     "duration": 0.005347,
     "end_time": "2025-09-24T23:11:17.144781",
     "exception": false,
     "start_time": "2025-09-24T23:11:17.139434",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Acceleration magnitude \n",
    "* Vector magnitude summarizes the intensity in one channel "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "72d1eb39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:11:17.157988Z",
     "iopub.status.busy": "2025-09-24T23:11:17.157643Z",
     "iopub.status.idle": "2025-09-24T23:11:18.150249Z",
     "shell.execute_reply": "2025-09-24T23:11:18.149307Z"
    },
    "papermill": {
     "duration": 1.001355,
     "end_time": "2025-09-24T23:11:18.152342",
     "exception": false,
     "start_time": "2025-09-24T23:11:17.150987",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "defog_df   = add_acc_magnitude(defog_df)\n",
    "notype_df  = add_acc_magnitude(notype_df)\n",
    "tdcsfog_df = add_acc_magnitude(tdcsfog_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c300814d",
   "metadata": {
    "papermill": {
     "duration": 0.005357,
     "end_time": "2025-09-24T23:11:18.164726",
     "exception": false,
     "start_time": "2025-09-24T23:11:18.159369",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Outlier Flags \n",
    "* Quick QA to inspect extreme values that might indicate hardware glitches. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "636623ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:11:18.177395Z",
     "iopub.status.busy": "2025-09-24T23:11:18.177008Z",
     "iopub.status.idle": "2025-09-24T23:11:18.761528Z",
     "shell.execute_reply": "2025-09-24T23:11:18.760575Z"
    },
    "papermill": {
     "duration": 0.592708,
     "end_time": "2025-09-24T23:11:18.763257",
     "exception": false,
     "start_time": "2025-09-24T23:11:18.170549",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (9_744_217, 12)\n",
      "┌───────┬────────────┬────────────┬─────────────┬───┬──────┬────────────┬─────────────┬────────────┐\n",
      "│ Time  ┆ AccV       ┆ AccML      ┆ AccAP       ┆ … ┆ Task ┆ patient_id ┆ Acc_MAGNITU ┆ is_outlier │\n",
      "│ ---   ┆ ---        ┆ ---        ┆ ---         ┆   ┆ ---  ┆ ---        ┆ DE          ┆ _mag       │\n",
      "│ i64   ┆ f64        ┆ f64        ┆ f64         ┆   ┆ i8   ┆ str        ┆ ---         ┆ ---        │\n",
      "│       ┆            ┆            ┆             ┆   ┆      ┆            ┆ f64         ┆ bool       │\n",
      "╞═══════╪════════════╪════════════╪═════════════╪═══╪══════╪════════════╪═════════════╪════════════╡\n",
      "│ 0     ┆ -59.771776 ┆ -58.37085  ┆ -129.343338 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.978961  ┆ true       │\n",
      "│ 1     ┆ 59.753772  ┆ 58.356426  ┆ 129.315529  ┆ … ┆ 0    ┆ be9d33541d ┆ 153.943145  ┆ true       │\n",
      "│ 2     ┆ -59.76452  ┆ -58.354606 ┆ -129.329472 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.95834   ┆ true       │\n",
      "│ 3     ┆ 59.786412  ┆ 58.372004  ┆ 129.335044  ┆ … ┆ 0    ┆ be9d33541d ┆ 153.978113  ┆ true       │\n",
      "│ 4     ┆ -59.728397 ┆ -58.350124 ┆ -129.300058 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.917911  ┆ true       │\n",
      "│ …     ┆ …          ┆ …          ┆ …           ┆ … ┆ …    ┆ …          ┆ …           ┆ …          │\n",
      "│ 52925 ┆ 24.679778  ┆ -0.164453  ┆ 17.214027   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.09055    ┆ true       │\n",
      "│ 52926 ┆ -24.114548 ┆ -0.342333  ┆ -18.156683  ┆ … ┆ 0    ┆ 06414383cf ┆ 30.187642   ┆ true       │\n",
      "│ 52928 ┆ -24.911227 ┆ 0.123015   ┆ -17.233841  ┆ … ┆ 0    ┆ 06414383cf ┆ 30.291742   ┆ true       │\n",
      "│ 52931 ┆ 24.485893  ┆ 0.198116   ┆ 17.416981   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.049118   ┆ true       │\n",
      "│ 52933 ┆ 24.548891  ┆ -0.020052  ┆ 17.264139   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.011647   ┆ true       │\n",
      "└───────┴────────────┴────────────┴─────────────┴───┴──────┴────────────┴─────────────┴────────────┘\n",
      "shape: (9_618_463, 10)\n",
      "┌────────┬─────────────┬────────────┬────────────┬───┬──────┬────────────┬────────────┬────────────┐\n",
      "│ Time   ┆ AccV        ┆ AccML      ┆ AccAP      ┆ … ┆ Task ┆ patient_id ┆ Acc_MAGNIT ┆ is_outlier │\n",
      "│ ---    ┆ ---         ┆ ---        ┆ ---        ┆   ┆ ---  ┆ ---        ┆ UDE        ┆ _mag       │\n",
      "│ i64    ┆ f64         ┆ f64        ┆ f64        ┆   ┆ i8   ┆ str        ┆ ---        ┆ ---        │\n",
      "│        ┆             ┆            ┆            ┆   ┆      ┆            ┆ f64        ┆ bool       │\n",
      "╞════════╪═════════════╪════════════╪════════════╪═══╪══════╪════════════╪════════════╪════════════╡\n",
      "│ 0      ┆ -105738.418 ┆ 22109.6106 ┆ 51661.2103 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119742.760 ┆ true       │\n",
      "│        ┆ 332         ┆ 42         ┆ 98         ┆   ┆      ┆            ┆ 34         ┆            │\n",
      "│ 1      ┆ 105728.7489 ┆ -22107.236 ┆ -51657.462 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119732.166 ┆ true       │\n",
      "│        ┆ 57          ┆ 239        ┆ 694        ┆   ┆      ┆            ┆ 53         ┆            │\n",
      "│ 2      ┆ -105719.132 ┆ 22104.9135 ┆ 51653.7195 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119721.631 ┆ true       │\n",
      "│        ┆ 627         ┆ 87         ┆ 51         ┆   ┆      ┆            ┆ 093        ┆            │\n",
      "│ 3      ┆ 105709.4376 ┆ -22102.541 ┆ -51649.987 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119711.021 ┆ true       │\n",
      "│        ┆ 5           ┆ 995        ┆ 425        ┆   ┆      ┆            ┆ 931        ┆            │\n",
      "│ 4      ┆ -105699.781 ┆ 22100.1691 ┆ 51646.2336 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119700.437 ┆ true       │\n",
      "│        ┆ 5           ┆ 86         ┆ 12         ┆   ┆      ┆            ┆ 482        ┆            │\n",
      "│ …      ┆ …           ┆ …          ┆ …          ┆ … ┆ …    ┆ …          ┆ …          ┆ …          │\n",
      "│ 443491 ┆ -1.8163e6   ┆ 20009.0142 ┆ -1.0640e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1051e6   ┆ true       │\n",
      "│        ┆             ┆ 64         ┆            ┆   ┆      ┆            ┆            ┆            │\n",
      "│ 443492 ┆ 1.8162e6    ┆ -20010.075 ┆ 1.0640e6   ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1050e6   ┆ true       │\n",
      "│        ┆             ┆ 485        ┆            ┆   ┆      ┆            ┆            ┆            │\n",
      "│ 443493 ┆ -1.8188e6   ┆ 20041.3332 ┆ -1.0655e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1080e6   ┆ true       │\n",
      "│        ┆             ┆ 12         ┆            ┆   ┆      ┆            ┆            ┆            │\n",
      "│ 443494 ┆ 1.8140e6    ┆ -19990.770 ┆ 1.0628e6   ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1025e6   ┆ true       │\n",
      "│        ┆             ┆ 975        ┆            ┆   ┆      ┆            ┆            ┆            │\n",
      "│ 443495 ┆ -1.8204e6   ┆ 20063.3133 ┆ -1.0665e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1099e6   ┆ true       │\n",
      "│        ┆             ┆ 26         ┆            ┆   ┆      ┆            ┆            ┆            │\n",
      "└────────┴─────────────┴────────────┴────────────┴───┴──────┴────────────┴────────────┴────────────┘\n",
      "shape: (316_554, 10)\n",
      "┌──────┬────────────┬───────────┬────────────┬───┬─────────┬────────────┬─────────────┬────────────┐\n",
      "│ Time ┆ AccV       ┆ AccML     ┆ AccAP      ┆ … ┆ Walking ┆ patient_id ┆ Acc_MAGNITU ┆ is_outlier │\n",
      "│ ---  ┆ ---        ┆ ---       ┆ ---        ┆   ┆ ---     ┆ ---        ┆ DE          ┆ _mag       │\n",
      "│ i64  ┆ f64        ┆ f64       ┆ f64        ┆   ┆ i64     ┆ str        ┆ ---         ┆ ---        │\n",
      "│      ┆            ┆           ┆            ┆   ┆         ┆            ┆ f64         ┆ bool       │\n",
      "╞══════╪════════════╪═══════════╪════════════╪═══╪═════════╪════════════╪═════════════╪════════════╡\n",
      "│ 1715 ┆ -20.587868 ┆ -7.620407 ┆ 20.962908  ┆ … ┆ 0       ┆ a171e61840 ┆ 30.35415    ┆ true       │\n",
      "│ 1717 ┆ 14.06747   ┆ 9.151195  ┆ -25.699131 ┆ … ┆ 0       ┆ a171e61840 ┆ 30.693377   ┆ true       │\n",
      "│ 1910 ┆ 0.526905   ┆ 7.762494  ┆ 33.052152  ┆ … ┆ 0       ┆ a171e61840 ┆ 33.95554    ┆ true       │\n",
      "│ 1911 ┆ -13.311803 ┆ 20.667404 ┆ 37.910822  ┆ … ┆ 0       ┆ a171e61840 ┆ 45.183803   ┆ true       │\n",
      "│ 1914 ┆ 1.454304   ┆ -6.039686 ┆ -34.55845  ┆ … ┆ 0       ┆ a171e61840 ┆ 35.112381   ┆ true       │\n",
      "│ …    ┆ …          ┆ …         ┆ …          ┆ … ┆ …       ┆ …          ┆ …           ┆ …          │\n",
      "│ 4040 ┆ -24.176547 ┆ -6.393739 ┆ -22.537217 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 33.664692   ┆ true       │\n",
      "│ 4042 ┆ 38.757153  ┆ 2.703988  ┆ 2.812874   ┆ … ┆ 0       ┆ 0506d9a39f ┆ 38.953058   ┆ true       │\n",
      "│ 5059 ┆ -7.357523  ┆ -0.878686 ┆ -43.843425 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 44.465167   ┆ true       │\n",
      "│ 5060 ┆ -12.966388 ┆ 2.086433  ┆ -39.303495 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 41.439656   ┆ true       │\n",
      "│ 5061 ┆ 3.995509   ┆ 0.397924  ┆ 29.786248  ┆ … ┆ 0       ┆ 0506d9a39f ┆ 30.055665   ┆ true       │\n",
      "└──────┴────────────┴───────────┴────────────┴───┴─────────┴────────────┴─────────────┴────────────┘\n"
     ]
    }
   ],
   "source": [
    "def outlier_acc_magnitude(df: pl.DataFrame) -> pl.DataFrame:\n",
    "    df_outlier = df.with_columns((pl.col('Acc_MAGNITUDE') > 30).alias('is_outlier_mag'))\n",
    "    return df_outlier.filter(pl.col(\"is_outlier_mag\") == True)\n",
    "\n",
    "print(outlier_acc_magnitude(defog_df))\n",
    "print(outlier_acc_magnitude(notype_df))\n",
    "print(outlier_acc_magnitude(tdcsfog_df))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56780350",
   "metadata": {
    "papermill": {
     "duration": 0.005656,
     "end_time": "2025-09-24T23:11:18.775107",
     "exception": false,
     "start_time": "2025-09-24T23:11:18.769451",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Standardize acceleration channels per patient (z-score)\n",
    "* Filtering first removes drift/spikes that would distord means/standard deviations.\n",
    "* Then z-scoring equalizes patients for fair modeling.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "83158376",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:11:18.788042Z",
     "iopub.status.busy": "2025-09-24T23:11:18.787751Z",
     "iopub.status.idle": "2025-09-24T23:11:24.901180Z",
     "shell.execute_reply": "2025-09-24T23:11:24.900210Z"
    },
    "papermill": {
     "duration": 6.121809,
     "end_time": "2025-09-24T23:11:24.902843",
     "exception": false,
     "start_time": "2025-09-24T23:11:18.781034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape: (468_159, 11)\n",
      "┌──────┬───────────┬───────────┬───────────┬───┬───────┬──────┬────────────┬───────────────┐\n",
      "│ Time ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---  ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n",
      "│ i64  ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i8    ┆ i8   ┆ str        ┆ f64           │\n",
      "╞══════╪═══════════╪═══════════╪═══════════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n",
      "│ 0    ┆ -3.613702 ┆ -4.313352 ┆ -4.165176 ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.978961    │\n",
      "│ 1    ┆ 3.612643  ┆ 4.312322  ┆ 4.164315  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.943145    │\n",
      "│ 2    ┆ -3.613263 ┆ -4.312152 ┆ -4.16473  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.95834     │\n",
      "│ 3    ┆ 3.614617  ┆ 4.313473  ┆ 4.164943  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.978113    │\n",
      "│ 4    ┆ -3.611079 ┆ -4.31182  ┆ -4.163782 ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.917911    │\n",
      "│ …    ┆ …         ┆ …         ┆ …         ┆ … ┆ …     ┆ …    ┆ …          ┆ …             │\n",
      "│ 1577 ┆ 0.390441  ┆ 3.101196  ┆ 0.377114  ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 20.628529     │\n",
      "│ 1580 ┆ -0.409922 ┆ -3.22748  ┆ -0.394283 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 21.60884      │\n",
      "│ 1688 ┆ -0.398354 ┆ -3.000588 ┆ -0.445331 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 21.949696     │\n",
      "│ 1802 ┆ -0.427613 ┆ -3.023652 ┆ -0.477392 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 23.411585     │\n",
      "│ 2452 ┆ -0.524593 ┆ -3.010497 ┆ -0.581903 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 28.217266     │\n",
      "└──────┴───────────┴───────────┴───────────┴───┴───────┴──────┴────────────┴───────────────┘\n",
      "shape: (486_949, 9)\n",
      "┌───────┬───────────┬───────────┬───────────┬───┬───────┬──────┬────────────┬───────────────┐\n",
      "│ Time  ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---   ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n",
      "│ i64   ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i8    ┆ i8   ┆ str        ┆ f64           │\n",
      "╞═══════╪═══════════╪═══════════╪═══════════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n",
      "│ 0     ┆ -5.459917 ┆ 5.078533  ┆ 5.557393  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119742.76034  │\n",
      "│ 1     ┆ 5.459446  ┆ -5.078013 ┆ -5.557018 ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119732.16653  │\n",
      "│ 2     ┆ -5.458921 ┆ 5.077454  ┆ 5.556587  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119721.631093 │\n",
      "│ 3     ┆ 5.458448  ┆ -5.076935 ┆ -5.556214 ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119711.021931 │\n",
      "│ 4     ┆ -5.457922 ┆ 5.076364  ┆ 5.555782  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119700.437482 │\n",
      "│ …     ┆ …         ┆ …         ┆ …         ┆ … ┆ …     ┆ …    ┆ …          ┆ …             │\n",
      "│ 37493 ┆ -0.317898 ┆ 3.000242  ┆ -0.4967   ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0986e12     │\n",
      "│ 37494 ┆ 0.317811  ┆ -3.000202 ┆ 0.496609  ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0978e12     │\n",
      "│ 37495 ┆ -0.317752 ┆ 3.000131  ┆ -0.496546 ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0970e12     │\n",
      "│ 37496 ┆ 0.317665  ┆ -3.00009  ┆ 0.496455  ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0961e12     │\n",
      "│ 37497 ┆ -0.317606 ┆ 3.000019  ┆ -0.496391 ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0953e12     │\n",
      "└───────┴───────────┴───────────┴───────────┴───┴───────┴──────┴────────────┴───────────────┘\n",
      "shape: (267_710, 9)\n",
      "┌──────┬───────────┬───────────┬───────────┬───┬──────┬─────────┬────────────┬───────────────┐\n",
      "│ Time ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Turn ┆ Walking ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---  ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---  ┆ ---     ┆ ---        ┆ ---           │\n",
      "│ i64  ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i64  ┆ i64     ┆ str        ┆ f64           │\n",
      "╞══════╪═══════════╪═══════════╪═══════════╪═══╪══════╪═════════╪════════════╪═══════════════╡\n",
      "│ 1542 ┆ -0.678575 ┆ 3.215689  ┆ 2.144167  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 19.733076     │\n",
      "│ 1609 ┆ -1.702092 ┆ -3.120664 ┆ 1.690087  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 17.382579     │\n",
      "│ 1714 ┆ -1.631935 ┆ -3.385064 ┆ 2.986406  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 26.893392     │\n",
      "│ 1715 ┆ -5.401267 ┆ -2.938399 ┆ 2.539975  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 30.35415      │\n",
      "│ 1717 ┆ 3.690635  ┆ 3.528663  ┆ -3.113839 ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 30.693377     │\n",
      "│ …    ┆ …         ┆ …         ┆ …         ┆ … ┆ …    ┆ …       ┆ …          ┆ …             │\n",
      "│ 5057 ┆ 1.384847  ┆ -0.229026 ┆ 5.568359  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 24.497433     │\n",
      "│ 5059 ┆ -1.51051  ┆ -0.340695 ┆ -10.36978 ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 44.465167     │\n",
      "│ 5060 ┆ -2.661986 ┆ 0.80892   ┆ -9.296001 ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 41.439656     │\n",
      "│ 5061 ┆ 0.820218  ┆ 0.154263  ┆ 7.045024  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 30.055665     │\n",
      "│ 5062 ┆ 1.181545  ┆ -0.724016 ┆ 5.718217  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 24.922224     │\n",
      "└──────┴───────────┴───────────┴───────────┴───┴──────┴─────────┴────────────┴───────────────┘\n"
     ]
    }
   ],
   "source": [
    "defog_df   = standardize_acc_by_patient(defog_df)\n",
    "notype_df  = standardize_acc_by_patient(notype_df)\n",
    "tdcsfog_df = standardize_acc_by_patient(tdcsfog_df)\n",
    "\n",
    "# 10b) Check z-score outliers (|z| > 3)\n",
    "print(detect_outliers(defog_df))\n",
    "print(detect_outliers(notype_df))\n",
    "print(detect_outliers(tdcsfog_df))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6c2e525",
   "metadata": {
    "papermill": {
     "duration": 0.005646,
     "end_time": "2025-09-24T23:11:24.914565",
     "exception": false,
     "start_time": "2025-09-24T23:11:24.908919",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot for patient #1:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60e03a05",
   "metadata": {
    "papermill": {
     "duration": 0.005564,
     "end_time": "2025-09-24T23:11:24.926343",
     "exception": false,
     "start_time": "2025-09-24T23:11:24.920779",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot for patient #2:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f5f64b7",
   "metadata": {
    "papermill": {
     "duration": 0.005611,
     "end_time": "2025-09-24T23:11:24.937798",
     "exception": false,
     "start_time": "2025-09-24T23:11:24.932187",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Plot for patient #3:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23fb433b",
   "metadata": {
    "papermill": {
     "duration": 0.005757,
     "end_time": "2025-09-24T23:11:24.949368",
     "exception": false,
     "start_time": "2025-09-24T23:11:24.943611",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Dtype summmary "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "537029c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-24T23:11:24.962135Z",
     "iopub.status.busy": "2025-09-24T23:11:24.961827Z",
     "iopub.status.idle": "2025-09-24T23:11:24.967956Z",
     "shell.execute_reply": "2025-09-24T23:11:24.966949Z"
    },
    "papermill": {
     "duration": 0.014378,
     "end_time": "2025-09-24T23:11:24.969442",
     "exception": false,
     "start_time": "2025-09-24T23:11:24.955064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DEFOG DATA TYPES:\n",
      "[Int64, Float64, Float64, Float64, Int64, Int64, Int64, Int8, Int8, String, Float64]\n",
      "\n",
      "TDCSFOG DATA TYPES:\n",
      "[Int64, Float64, Float64, Float64, Int64, Int64, Int64, String, Float64]\n",
      "\n",
      "NOTYPE DATA TYPES:\n",
      "[Int64, Float64, Float64, Float64, Int64, Int8, Int8, String, Float64]\n",
      "\n",
      "shape: (1, 11)\n",
      "┌──────┬──────┬───────┬───────┬───┬───────┬──────┬────────────┬───────────────┐\n",
      "│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n",
      "│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32   ┆ u32  ┆ u32        ┆ u32           │\n",
      "╞══════╪══════╪═══════╪═══════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n",
      "│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0     ┆ 0    ┆ 0          ┆ 0             │\n",
      "└──────┴──────┴───────┴───────┴───┴───────┴──────┴────────────┴───────────────┘\n",
      "shape: (1, 9)\n",
      "┌──────┬──────┬───────┬───────┬───┬───────┬──────┬────────────┬───────────────┐\n",
      "│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n",
      "│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32   ┆ u32  ┆ u32        ┆ u32           │\n",
      "╞══════╪══════╪═══════╪═══════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n",
      "│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0     ┆ 0    ┆ 0          ┆ 0             │\n",
      "└──────┴──────┴───────┴───────┴───┴───────┴──────┴────────────┴───────────────┘\n",
      "shape: (1, 9)\n",
      "┌──────┬──────┬───────┬───────┬───┬──────┬─────────┬────────────┬───────────────┐\n",
      "│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Turn ┆ Walking ┆ patient_id ┆ Acc_MAGNITUDE │\n",
      "│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---  ┆ ---     ┆ ---        ┆ ---           │\n",
      "│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32  ┆ u32     ┆ u32        ┆ u32           │\n",
      "╞══════╪══════╪═══════╪═══════╪═══╪══════╪═════════╪════════════╪═══════════════╡\n",
      "│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0    ┆ 0       ┆ 0          ┆ 0             │\n",
      "└──────┴──────┴───────┴───────┴───┴──────┴─────────┴────────────┴───────────────┘\n"
     ]
    }
   ],
   "source": [
    "print(f'DEFOG DATA TYPES:\\n{defog_df.dtypes}\\n')\n",
    "print(f'TDCSFOG DATA TYPES:\\n{tdcsfog_df.dtypes}\\n')\n",
    "print(f'NOTYPE DATA TYPES:\\n{notype_df.dtypes}\\n')\n",
    "\n",
    "# Null counts\n",
    "print(defog_df.null_count())\n",
    "print(notype_df.null_count())\n",
    "print(tdcsfog_df.null_count())"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 5677426,
     "sourceId": 41880,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 114.569353,
   "end_time": "2025-09-24T23:11:27.583140",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-09-24T23:09:33.013787",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

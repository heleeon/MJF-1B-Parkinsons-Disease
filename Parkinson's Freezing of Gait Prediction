{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":41880,"databundleVersionId":5677426,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# MJF-1B: Parkinson's Freezing of Gait Prediction\n*By Paulene Patrisha Pare*\n\n\nKaggle competition dataset: https://www.kaggle.com/competitions/tlvmc-parkinsons-freezing-gait-prediction/data\n\nObjective: \nTo detect the start and stop of each freezing episode and the occurence in these series of three types of freezing of gait events:\n* Start Hesitation\n* Turn\n* Walking","metadata":{}},{"cell_type":"markdown","source":"# Milestone 1 & 2  \n\nObjectives: \n* Load and label data (attach patient_id)\n* Ensure consistent units (convert g → m/s²)\n* Apply a zero-phase band-pass filter (0.1 - 30 Hz) per patient.\n* Derive a directionless signal (Acc_MAGNITUDE)\n* Standardize channels per patient (z-score).","metadata":{}},{"cell_type":"markdown","source":"# Import Python Libraries\n* **numpy/pandas**: Numeric and tabular utilities\n* **polars**: Fast DataFrame ingestion and column ops\n* **matplotlib/seaborn**: Visualization\n* **scipy.signal**: Digital filter design and zero-phase\n* **pathlib/os**: File system handling\n* **sklearn**: StandardScaler","metadata":{}},{"cell_type":"code","source":"import numpy as np                   \nimport pandas as pd                 \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.signal import butter, filtfilt\nimport tsfresh\nimport os\nfrom sklearn.preprocessing import StandardScaler\nimport polars as pl\nimport dask.dataframe as dd\nfrom pathlib import Path            ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.503831Z","iopub.execute_input":"2025-09-19T18:13:24.504143Z","iopub.status.idle":"2025-09-19T18:13:24.510299Z","shell.execute_reply.started":"2025-09-19T18:13:24.504119Z","shell.execute_reply":"2025-09-19T18:13:24.509079Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"# Data Exploration","metadata":{}},{"cell_type":"code","source":"# File paths for training datasets\ndefog   = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/defog')\nnotype  = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/notype')\ntdcsfog = Path('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/tdcsfog')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.512265Z","iopub.execute_input":"2025-09-19T18:13:24.512612Z","iopub.status.idle":"2025-09-19T18:13:24.546101Z","shell.execute_reply.started":"2025-09-19T18:13:24.512587Z","shell.execute_reply":"2025-09-19T18:13:24.544745Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"# List all files, folders, and subfolders\nall_files = os.listdir('../input/tlvmc-parkinsons-freezing-gait-prediction')\nprint('All competition datasets:')\nprint(all_files)\n\nprint()\n\ntrain_files = os.listdir('../input/tlvmc-parkinsons-freezing-gait-prediction/train')\nprint('Folders in train:')\nprint(train_files)\n\nprint() \n\ndefog_files = os.listdir(defog)\nprint('First 10 files in defog:')\nprint(defog_files[:10])\nprint(f'Files remaining: {len(defog_files)-10}')\n\nprint() \n\ntdcsfog_files = os.listdir(tdcsfog)\nprint('First 10 files in tdcsfog:')\nprint(tdcsfog_files[:10])\nprint(f'Files remaining: {len(tdcsfog_files)-10}')\n\nprint() \n\nnotype_files = os.listdir(notype)\nprint('First 10 files in notype:')\nprint(notype_files[:10])\nprint(f'Files remaining: {len(notype_files)-10}')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.547937Z","iopub.execute_input":"2025-09-19T18:13:24.548301Z","iopub.status.idle":"2025-09-19T18:13:24.634202Z","shell.execute_reply.started":"2025-09-19T18:13:24.548274Z","shell.execute_reply":"2025-09-19T18:13:24.633089Z"}},"outputs":[{"name":"stdout","text":"All competition datasets:\n['sample_submission.csv', 'unlabeled', 'subjects.csv', 'tasks.csv', 'defog_metadata.csv', 'daily_metadata.csv', 'test', 'events.csv', 'tdcsfog_metadata.csv', 'train']\n\nFolders in train:\n['defog', 'tdcsfog', 'notype']\n\nFirst 10 files in defog:\n['be9d33541d.csv', '4c3aa8ea6e.csv', '18e7abc37e.csv', '6a20935af5.csv', 'e642d9ea5f.csv', '3f3b08f78d.csv', '68e7e02a47.csv', 'f17eacf7d8.csv', '3f970065e5.csv', '7030643376.csv']\nFiles remaining: 81\n\nFirst 10 files in tdcsfog:\n['a171e61840.csv', '4171ea3a0c.csv', '0f985a8440.csv', '5d320ade20.csv', 'ae8c67086b.csv', 'b7214cbf21.csv', 'e18fcafee8.csv', '79568b8e25.csv', 'feba449e1a.csv', '7ebad45aec.csv']\nFiles remaining: 823\n\nFirst 10 files in notype:\n['1e8d55d48d.csv', '89e9ed32d1.csv', 'e5a0e226fe.csv', '1b3bc93401.csv', '34b979fc28.csv', '9cd837fd53.csv', '60f28aa837.csv', '02ab235146.csv', '6a886a3bb8.csv', '339c0cc15f.csv']\nFiles remaining: 36\n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"# General Helper Functions ","metadata":{}},{"cell_type":"code","source":"def load_files(folder_path: Path) -> pl.DataFrame:\n    \"\"\"\n    Loads all CSVs from a folder into a single Polars DataFrame.\n    Adds patient_id from file filename. \n    \"\"\"\n    \n    df_list = []\n    for path in folder_path.glob(\"*.csv\"): \n        patient_id = path.stem\n        df = pl.read_csv(path)\n        df = df.with_columns(pl.lit(patient_id).alias(\"patient_id\"))\n        df_list.append(df)\n    return pl.concat(df_list) if df_list else pl.DataFrame()\n    \n\ndef convert_valid_and_task(df: pl.DataFrame) -> pl.DataFrame:\n    \"\"\"\n    Cast Valid and Task columns to Int8 if present.\n    \"\"\"\n    out = df\n    if \"Valid\" in out.columns:\n        out = out.with_columns(pl.col(\"Valid\").cast(pl.Int8).alias(\"Valid\"))\n    if \"Task\" in out.columns:\n        out = out.with_columns(pl.col(\"Task\").cast(pl.Int8).alias(\"Task\"))\n    return out\n    \n\ndef add_acc_magnitude(df: pl.DataFrame) -> pl.DataFrame:\n    \"\"\"\n    Acc magnitude = sqrt(AccV^2 + AccML^2 + AccAP^2).\n    \"\"\"\n    \n    return df.with_columns(\n        ((pl.col(\"AccV\")**2 + pl.col(\"AccML\")**2 + pl.col(\"AccAP\")**2).sqrt())\n        .alias(\"Acc_MAGNITUDE\")\n    )\n\n\ndef standardize_acc_by_patient(df: pl.DataFrame) -> pl.DataFrame:\n    \"\"\"\n    Z-score AccV/AccML/AccAP per patient_id.\n    \"\"\"\n    \n    acc_cols = [\"AccV\", \"AccML\", \"AccAP\"]\n    out = df\n    for col in acc_cols:\n        if col in out.columns:\n            out = out.with_columns(\n                ((pl.col(col) - pl.col(col).mean().over(\"patient_id\")) /\n                 pl.col(col).std().over(\"patient_id\")).alias(col)\n            )\n    return out\n\ndef detect_outliers(df: pl.DataFrame, z_thresh: float = 3.0) -> pl.DataFrame:\n    \"\"\"\n    Return rows where any accel channel has |z| > z_thresh (after standardization).\n    \"\"\"\n    \n    acc_cols = [\"AccV\", \"AccML\", \"AccAP\"]\n    # Build a boolean mask across columns that exist\n    masks = []\n    for c in acc_cols:\n        if c in df.columns:\n            masks.append(pl.col(c).abs() > z_thresh)\n    return df.filter(pl.any_horizontal(masks)) if masks else df.head(0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.635239Z","iopub.execute_input":"2025-09-19T18:13:24.635513Z","iopub.status.idle":"2025-09-19T18:13:24.648969Z","shell.execute_reply.started":"2025-09-19T18:13:24.635491Z","shell.execute_reply":"2025-09-19T18:13:24.647670Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"# Filtering Helper Functions \n* Low-cut (O.1 Hz) removes drift/sensor bias (very slow trends)\n* High-cut (30 Hz) removes strap/device noise (sudden spikes)\n* filtfilt: (forward+backward) yields zero phase → no event time shift.\n\nWe infer sampling frequency from the *Time* column to adapt to slight rate differences ","metadata":{}},{"cell_type":"code","source":"def infer_fs(time_series: np.ndarray) -> float:\n    \"\"\"\n    Infer sampling frequency (Hz) from a time array (seconds) using median Δt.\n    \"\"\"\n    \n    # Avoid zeros / NaNs\n    dt = np.diff(time_series.astype(float))\n    dt = dt[np.isfinite(dt) & (dt > 0)]\n    if dt.size == 0:\n        raise ValueError(\"Cannot infer sampling frequency from Time column.\")\n    return 1.0 / np.median(dt)\n\n\ndef butter_bandpass(low_hz: float, high_hz: float, fs: float, order: int = 4):\n    \"\"\"\n    Design a Butterworth band-pass filter.\n    \"\"\"\n    \n    nyq = fs / 2.0\n    low = max(1e-6, low_hz / nyq)\n    high = min(0.999999, high_hz / nyq)\n    if high <= low:\n        raise ValueError(f\"Invalid band: low={low_hz}Hz, high={high_hz}Hz for fs={fs}Hz\")\n    b, a = butter(order, [low, high], btype=\"band\")\n    return b, a\n\n\n\ndef apply_bandpass_to_polars(df: pl.DataFrame, low_hz: float = 0.1, high_hz: float = 30.0, order: int = 4) -> pl.DataFrame:\n    \"\"\"\n    Apply band-pass filter to AccV/AccML/AccAP per patient using scipy.signal.filtfilt.\n    We convert each patient's slice to pandas to interpolate small gaps, filter, then write back.\n    Sampling frequency is inferred from Time (seconds).\n    \"\"\"\n    needed = [\"Time\", \"patient_id\", \"AccV\", \"AccML\", \"AccAP\"]\n    for col in [\"Time\", \"patient_id\"]:\n        if col not in df.columns:\n            raise ValueError(f\"'{col}' must be present to filter.\")\n    # Work columns that actually exist\n    acc_cols = [c for c in [\"AccV\", \"AccML\", \"AccAP\"] if c in df.columns]\n    if not acc_cols:\n        return df\n\n    # Process per patient to keep borders clean for filtfilt\n    out_slices = []\n    for pid, pdf in df.select(needed).to_pandas().groupby(\"patient_id\", sort=False):\n        # Ensure sorted by time\n        pdf = pdf.sort_values(\"Time\", kind=\"mergesort\")\n        fs = infer_fs(pdf[\"Time\"].to_numpy())\n        b, a = butter_bandpass(low_hz, high_hz, fs, order)\n\n        # Interpolate small gaps and filter each channel\n        for col in acc_cols:\n            # to_numeric + interpolate to avoid NaNs breaking filtfilt\n            sig = pd.to_numeric(pdf[col], errors=\"coerce\").interpolate(limit_direction=\"both\").to_numpy(dtype=float)\n            # If the segment is too short, skip filtering\n            if sig.size > max(3 * max(len(b), len(a)), 20):\n                sig_f = filtfilt(b, a, sig, method=\"pad\")\n            else:\n                sig_f = sig\n            pdf[col] = sig_f\n\n        out_slices.append(pdf)\n\n    # Merge all filtered patient slices back\n    filtered_pd = pd.concat(out_slices, ignore_index=True)\n\n    # Join the filtered columns back onto original Polars df (keeping any extra columns intact)\n    filtered_pl = pl.from_pandas(filtered_pd[[\"Time\", \"patient_id\"] + acc_cols])\n    out = df.join(filtered_pl, on=[\"Time\", \"patient_id\"], how=\"left\", suffix=\"_f\")\n    # Overwrite originals with filtered where available\n    for col in acc_cols:\n        fcol = f\"{col}_f\"\n        out = out.with_columns(\n            pl.when(pl.col(fcol).is_not_null()).then(pl.col(fcol)).otherwise(pl.col(col)).alias(col)\n        ).drop(fcol)\n    return out\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.651208Z","iopub.execute_input":"2025-09-19T18:13:24.652283Z","iopub.status.idle":"2025-09-19T18:13:24.683787Z","shell.execute_reply.started":"2025-09-19T18:13:24.652242Z","shell.execute_reply":"2025-09-19T18:13:24.682513Z"}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"# Load training dataset ","metadata":{}},{"cell_type":"code","source":"defog_df   = load_files(defog)\nnotype_df  = load_files(notype)\ntdcsfog_df = load_files(tdcsfog)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:13:24.685102Z","iopub.execute_input":"2025-09-19T18:13:24.685664Z","iopub.status.idle":"2025-09-19T18:14:11.161952Z","shell.execute_reply.started":"2025-09-19T18:13:24.685638Z","shell.execute_reply":"2025-09-19T18:14:11.160886Z"}},"outputs":[],"execution_count":11},{"cell_type":"markdown","source":"# Review Data ","metadata":{}},{"cell_type":"code","source":"print(defog_df.head())\nprint(defog_df.describe())\nprint(defog_df.shape)\nprint(defog_df.columns)\nprint(defog_df.dtypes)\n\nprint(notype_df.head())\nprint(notype_df.shape)\nprint(notype_df.columns)\nprint(notype_df.dtypes)\nprint(notype_df.describe())\n\nprint(tdcsfog_df.head())\nprint(tdcsfog_df.shape)\nprint(tdcsfog_df.columns)\nprint(tdcsfog_df.dtypes)\nprint(tdcsfog_df.describe())\n\nevents_df = pd.read_csv('/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/events.csv')\nprint(events_df.head())\nprint(events_df.shape)\nprint(events_df.columns)\nprint(events_df.dtypes)\nprint(events_df.describe())\n\nunique_defog_patients = defog_df[\"patient_id\"].unique()\nprint(unique_defog_patients)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:14:11.162857Z","iopub.execute_input":"2025-09-19T18:14:11.163259Z","iopub.status.idle":"2025-09-19T18:14:16.125805Z","shell.execute_reply.started":"2025-09-19T18:14:11.163225Z","shell.execute_reply":"2025-09-19T18:14:16.123926Z"}},"outputs":[{"name":"stdout","text":"shape: (5, 10)\n┌──────┬───────────┬──────────┬──────────┬───┬─────────┬───────┬───────┬────────────┐\n│ Time ┆ AccV      ┆ AccML    ┆ AccAP    ┆ … ┆ Walking ┆ Valid ┆ Task  ┆ patient_id │\n│ ---  ┆ ---       ┆ ---      ┆ ---      ┆   ┆ ---     ┆ ---   ┆ ---   ┆ ---        │\n│ i64  ┆ f64       ┆ f64      ┆ f64      ┆   ┆ i64     ┆ bool  ┆ bool  ┆ str        │\n╞══════╪═══════════╪══════════╪══════════╪═══╪═════════╪═══════╪═══════╪════════════╡\n│ 0    ┆ -1.002697 ┆ 0.022371 ┆ 0.068304 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 1    ┆ -1.002641 ┆ 0.019173 ┆ 0.066162 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 2    ┆ -0.99982  ┆ 0.019142 ┆ 0.067536 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 3    ┆ -0.998023 ┆ 0.018378 ┆ 0.068409 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 4    ┆ -0.998359 ┆ 0.016726 ┆ 0.066448 ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n└──────┴───────────┴──────────┴──────────┴───┴─────────┴───────┴───────┴────────────┘\nshape: (9, 11)\n┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ Walking   ┆ Valid     ┆ Task      ┆ patient_ │\n│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ ---       ┆ ---       ┆ id       │\n│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ f64       ┆ f64       ┆ f64       ┆ ---      │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ str      │\n╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n│ count     ┆ 1.3525702 ┆ 1.3525702 ┆ 1.3525702 ┆ … ┆ 1.3525702 ┆ 1.3525702 ┆ 1.3525702 ┆ 13525702 │\n│           ┆ e7        ┆ e7        ┆ e7        ┆   ┆ e7        ┆ e7        ┆ e7        ┆          │\n│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ mean      ┆ 86611.589 ┆ -0.940173 ┆ 0.001173  ┆ … ┆ 0.007284  ┆ 0.302426  ┆ 0.306526  ┆ null     │\n│           ┆ 61        ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ std       ┆ 64791.572 ┆ 0.086065  ┆ 0.120008  ┆ … ┆ 0.085034  ┆ null      ┆ null      ┆ null     │\n│           ┆ 173       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ min       ┆ 0.0       ┆ -6.024701 ┆ -4.059201 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 02ea7826 │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 81       │\n│ 25%       ┆ 37256.0   ┆ -0.986571 ┆ -0.0625   ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ 50%       ┆ 75149.0   ┆ -0.953125 ┆ 0.002385  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ 75%       ┆ 121179.0  ┆ -0.90625  ┆ 0.078125  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ max       ┆ 415387.0  ┆ 4.458365  ┆ 4.524038  ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ f9fc61ce │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 85       │\n└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\n(13525702, 10)\n['Time', 'AccV', 'AccML', 'AccAP', 'StartHesitation', 'Turn', 'Walking', 'Valid', 'Task', 'patient_id']\n[Int64, Float64, Float64, Float64, Int64, Int64, Int64, Boolean, Boolean, String]\nshape: (5, 8)\n┌──────┬───────────┬───────────┬──────────┬───────┬───────┬───────┬────────────┐\n│ Time ┆ AccV      ┆ AccML     ┆ AccAP    ┆ Event ┆ Valid ┆ Task  ┆ patient_id │\n│ ---  ┆ ---       ┆ ---       ┆ ---      ┆ ---   ┆ ---   ┆ ---   ┆ ---        │\n│ i64  ┆ f64       ┆ f64       ┆ f64      ┆ i64   ┆ bool  ┆ bool  ┆ str        │\n╞══════╪═══════════╪═══════════╪══════════╪═══════╪═══════╪═══════╪════════════╡\n│ 0    ┆ -0.991926 ┆ -0.119916 ┆ 0.050087 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 1    ┆ -0.994243 ┆ -0.118624 ┆ 0.049909 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 2    ┆ -0.99584  ┆ -0.118602 ┆ 0.048774 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 3    ┆ -0.995865 ┆ -0.121627 ┆ 0.04809  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 4    ┆ -0.99233  ┆ -0.122146 ┆ 0.048878 ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n└──────┴───────────┴───────────┴──────────┴───────┴───────┴───────┴────────────┘\n(10251114, 8)\n['Time', 'AccV', 'AccML', 'AccAP', 'Event', 'Valid', 'Task', 'patient_id']\n[Int64, Float64, Float64, Float64, Int64, Boolean, Boolean, String]\nshape: (9, 9)\n┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ Event     ┆ Valid     ┆ Task      ┆ patient_ │\n│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---       ┆ ---       ┆ ---       ┆ id       │\n│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ f64       ┆ f64       ┆ f64       ┆ ---      │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ str      │\n╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n│ count     ┆ 1.0251114 ┆ 1.0251114 ┆ 1.0251114 ┆ … ┆ 1.0251114 ┆ 1.0251114 ┆ 1.0251114 ┆ 10251114 │\n│           ┆ e7        ┆ e7        ┆ e7        ┆   ┆ e7        ┆ e7        ┆ e7        ┆          │\n│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ mean      ┆ 123128.63 ┆ -0.932382 ┆ -0.07878  ┆ … ┆ 0.048702  ┆ 0.331116  ┆ 0.334288  ┆ null     │\n│           ┆ 4988      ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ std       ┆ 84077.542 ┆ 0.086195  ┆ 0.126094  ┆ … ┆ 0.215243  ┆ null      ┆ null      ┆ null     │\n│           ┆ 879       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ min       ┆ 0.0       ┆ -5.738525 ┆ -3.625081 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 02ab2351 │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ 46       │\n│ 25%       ┆ 55712.0   ┆ -0.979533 ┆ -0.15462  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ 50%       ┆ 111533.0  ┆ -0.945709 ┆ -0.07047  ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ 75%       ┆ 175592.0  ┆ -0.890877 ┆ -0.006932 ┆ … ┆ 0.0       ┆ null      ┆ null      ┆ null     │\n│ max       ┆ 443495.0  ┆ 1.223533  ┆ 4.328019  ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ e8e530a4 │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ f9       │\n└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\nshape: (5, 8)\n┌──────┬───────────┬──────────┬──────────┬─────────────────┬──────┬─────────┬────────────┐\n│ Time ┆ AccV      ┆ AccML    ┆ AccAP    ┆ StartHesitation ┆ Turn ┆ Walking ┆ patient_id │\n│ ---  ┆ ---       ┆ ---      ┆ ---      ┆ ---             ┆ ---  ┆ ---     ┆ ---        │\n│ i64  ┆ f64       ┆ f64      ┆ f64      ┆ i64             ┆ i64  ┆ i64     ┆ str        │\n╞══════╪═══════════╪══════════╪══════════╪═════════════════╪══════╪═════════╪════════════╡\n│ 0    ┆ -9.66589  ┆ 0.04255  ┆ 0.184744 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 1    ┆ -9.672969 ┆ 0.049217 ┆ 0.184644 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 2    ┆ -9.67026  ┆ 0.03362  ┆ 0.19379  ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 3    ┆ -9.673356 ┆ 0.035159 ┆ 0.184369 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 4    ┆ -9.671458 ┆ 0.043913 ┆ 0.197814 ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n└──────┴───────────┴──────────┴──────────┴─────────────────┴──────┴─────────┴────────────┘\n(7062672, 8)\n['Time', 'AccV', 'AccML', 'AccAP', 'StartHesitation', 'Turn', 'Walking', 'patient_id']\n[Int64, Float64, Float64, Float64, Int64, Int64, Int64, String]\nshape: (9, 9)\n┌───────────┬───────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬──────────┐\n│ statistic ┆ Time      ┆ AccV      ┆ AccML     ┆ … ┆ StartHesi ┆ Turn      ┆ Walking   ┆ patient_ │\n│ ---       ┆ ---       ┆ ---       ┆ ---       ┆   ┆ tation    ┆ ---       ┆ ---       ┆ id       │\n│ str       ┆ f64       ┆ f64       ┆ f64       ┆   ┆ ---       ┆ f64       ┆ f64       ┆ ---      │\n│           ┆           ┆           ┆           ┆   ┆ f64       ┆           ┆           ┆ str      │\n╞═══════════╪═══════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪══════════╡\n│ count     ┆ 7.062672e ┆ 7.062672e ┆ 7.062672e ┆ … ┆ 7.062672e ┆ 7.062672e ┆ 7.062672e ┆ 7062672  │\n│           ┆ 6         ┆ 6         ┆ 6         ┆   ┆ 6         ┆ 6         ┆ 6         ┆          │\n│ null_coun ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 0        │\n│ t         ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ mean      ┆ 9289.4672 ┆ -9.306317 ┆ -0.201251 ┆ … ┆ 0.043155  ┆ 0.237698  ┆ 0.029428  ┆ null     │\n│           ┆ 97        ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ std       ┆ 13998.925 ┆ 1.080174  ┆ 1.269525  ┆ … ┆ 0.203206  ┆ 0.425673  ┆ 0.169002  ┆ null     │\n│           ┆ 696       ┆           ┆           ┆   ┆           ┆           ┆           ┆          │\n│ min       ┆ 0.0       ┆ -35.52111 ┆ -26.16439 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ 003f117e │\n│           ┆           ┆ 9         ┆ 8         ┆   ┆           ┆           ┆           ┆ 14       │\n│ 25%       ┆ 2119.0    ┆ -9.762402 ┆ -0.929545 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n│ 50%       ┆ 4310.0    ┆ -9.363524 ┆ -0.172224 ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n│ 75%       ┆ 8433.0    ┆ -8.776815 ┆ 0.575211  ┆ … ┆ 0.0       ┆ 0.0       ┆ 0.0       ┆ null     │\n│ max       ┆ 97076.0   ┆ 20.906953 ┆ 27.484719 ┆ … ┆ 1.0       ┆ 1.0       ┆ 1.0       ┆ ffda8fad │\n│           ┆           ┆           ┆           ┆   ┆           ┆           ┆           ┆ fd       │\n└───────────┴───────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴──────────┘\n           Id      Init  Completion  Type  Kinetic\n0  003f117e14   8.61312     14.7731  Turn      1.0\n1  009ee11563  11.38470     41.1847  Turn      1.0\n2  009ee11563  54.66470     58.7847  Turn      1.0\n3  011322847a  28.09660     30.2966  Turn      1.0\n4  01d0fe7266  30.31840     31.8784  Turn      1.0\n(3544, 5)\nIndex(['Id', 'Init', 'Completion', 'Type', 'Kinetic'], dtype='object')\nId             object\nInit          float64\nCompletion    float64\nType           object\nKinetic       float64\ndtype: object\n              Init   Completion      Kinetic\ncount  3544.000000  3544.000000  2502.000000\nmean    956.298418   964.489046     0.817746\nstd     946.357201   943.968560     0.386131\nmin     -30.669000   -29.719000     0.000000\n25%      39.518175    48.610800     1.000000\n50%     768.656500   774.261000     1.000000\n75%    1570.300000  1576.697250     1.000000\nmax    4381.217000  4392.745000     1.000000\nshape: (91,)\nSeries: 'patient_id' [str]\n[\n\t\"97e44fa8c3\"\n\t\"1ff78d55e9\"\n\t\"3e6987cb2d\"\n\t\"8d2d863dfd\"\n\t\"0c55be4384\"\n\t…\n\t\"54c6a21be6\"\n\t\"a057215d88\"\n\t\"0eaac04f17\"\n\t\"aafcbecb5a\"\n\t\"6a20935af5\"\n]\n","output_type":"stream"}],"execution_count":12},{"cell_type":"markdown","source":"# Unit Conversions \n* (g -> m/s^2) for ALL training datasets\n* Models expect consistent physical units","metadata":{}},{"cell_type":"code","source":"G_CONVERSION = 9.80665\nfor df_name in [\"defog_df\", \"notype_df\", \"tdcsfog_df\"]:\n    df_tmp = locals()[df_name]\n    acc_cols = [c for c in [\"AccV\", \"AccML\", \"AccAP\"] if c in df_tmp.columns]\n    if acc_cols:\n        # Multiply in-place using with_columns to avoid SettingWithCopy issues\n        locals()[df_name] = df_tmp.with_columns([ (pl.col(c) * G_CONVERSION).alias(c) for c in acc_cols ])\n\nprint(defog_df)\nprint(notype_df)\nprint(tdcsfog_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:14:16.129381Z","iopub.execute_input":"2025-09-19T18:14:16.129696Z","iopub.status.idle":"2025-09-19T18:14:17.215251Z","shell.execute_reply.started":"2025-09-19T18:14:16.129674Z","shell.execute_reply":"2025-09-19T18:14:17.214310Z"}},"outputs":[{"name":"stdout","text":"shape: (13_525_702, 10)\n┌────────┬───────────┬──────────┬───────────┬───┬─────────┬───────┬───────┬────────────┐\n│ Time   ┆ AccV      ┆ AccML    ┆ AccAP     ┆ … ┆ Walking ┆ Valid ┆ Task  ┆ patient_id │\n│ ---    ┆ ---       ┆ ---      ┆ ---       ┆   ┆ ---     ┆ ---   ┆ ---   ┆ ---        │\n│ i64    ┆ f64       ┆ f64      ┆ f64       ┆   ┆ i64     ┆ bool  ┆ bool  ┆ str        │\n╞════════╪═══════════╪══════════╪═══════════╪═══╪═════════╪═══════╪═══════╪════════════╡\n│ 0      ┆ -9.833101 ┆ 0.219382 ┆ 0.669832  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 1      ┆ -9.832554 ┆ 0.188024 ┆ 0.648829  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 2      ┆ -9.804885 ┆ 0.187721 ┆ 0.662298  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 3      ┆ -9.787264 ┆ 0.180227 ┆ 0.670866  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ 4      ┆ -9.790555 ┆ 0.164025 ┆ 0.651633  ┆ … ┆ 0       ┆ false ┆ false ┆ be9d33541d │\n│ …      ┆ …         ┆ …        ┆ …         ┆ … ┆ …       ┆ …     ┆ …     ┆ …          │\n│ 109120 ┆ -9.210807 ┆ 0.30954  ┆ -3.871049 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n│ 109121 ┆ -9.228995 ┆ 0.309714 ┆ -3.850343 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n│ 109122 ┆ -9.219534 ┆ 0.285297 ┆ -3.867594 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n│ 109123 ┆ -9.216992 ┆ 0.27516  ┆ -3.909563 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n│ 109124 ┆ -9.208502 ┆ 0.261129 ┆ -3.907498 ┆ … ┆ 0       ┆ false ┆ false ┆ 06414383cf │\n└────────┴───────────┴──────────┴───────────┴───┴─────────┴───────┴───────┴────────────┘\nshape: (10_251_114, 8)\n┌────────┬───────────┬───────────┬───────────┬───────┬───────┬───────┬────────────┐\n│ Time   ┆ AccV      ┆ AccML     ┆ AccAP     ┆ Event ┆ Valid ┆ Task  ┆ patient_id │\n│ ---    ┆ ---       ┆ ---       ┆ ---       ┆ ---   ┆ ---   ┆ ---   ┆ ---        │\n│ i64    ┆ f64       ┆ f64       ┆ f64       ┆ i64   ┆ bool  ┆ bool  ┆ str        │\n╞════════╪═══════════╪═══════════╪═══════════╪═══════╪═══════╪═══════╪════════════╡\n│ 0      ┆ -9.727468 ┆ -1.175975 ┆ 0.491184  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 1      ┆ -9.750189 ┆ -1.163302 ┆ 0.489444  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 2      ┆ -9.765857 ┆ -1.163087 ┆ 0.478313  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 3      ┆ -9.766098 ┆ -1.192753 ┆ 0.471599  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ 4      ┆ -9.731436 ┆ -1.19784  ┆ 0.479333  ┆ 0     ┆ false ┆ false ┆ 1e8d55d48d │\n│ …      ┆ …         ┆ …         ┆ …         ┆ …     ┆ …     ┆ …     ┆ …          │\n│ 443491 ┆ -8.336771 ┆ -1.537457 ┆ -4.896186 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n│ 443492 ┆ -8.309133 ┆ -1.583071 ┆ -4.873271 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n│ 443493 ┆ -8.298749 ┆ -1.609258 ┆ -4.858621 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n│ 443494 ┆ -8.271171 ┆ -1.608903 ┆ -4.858399 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n│ 443495 ┆ -8.237273 ┆ -1.585128 ┆ -4.865256 ┆ 0     ┆ false ┆ false ┆ 434732a5e3 │\n└────────┴───────────┴───────────┴───────────┴───────┴───────┴───────┴────────────┘\nshape: (7_062_672, 8)\n┌──────┬────────────┬───────────┬────────────┬─────────────────┬──────┬─────────┬────────────┐\n│ Time ┆ AccV       ┆ AccML     ┆ AccAP      ┆ StartHesitation ┆ Turn ┆ Walking ┆ patient_id │\n│ ---  ┆ ---        ┆ ---       ┆ ---        ┆ ---             ┆ ---  ┆ ---     ┆ ---        │\n│ i64  ┆ f64        ┆ f64       ┆ f64        ┆ i64             ┆ i64  ┆ i64     ┆ str        │\n╞══════╪════════════╪═══════════╪════════════╪═════════════════╪══════╪═════════╪════════════╡\n│ 0    ┆ -94.79     ┆ 0.417272  ┆ 1.811716   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 1    ┆ -94.85942  ┆ 0.48265   ┆ 1.810744   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 2    ┆ -94.832859 ┆ 0.329699  ┆ 1.900435   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 3    ┆ -94.863213 ┆ 0.344791  ┆ 1.808046   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ 4    ┆ -94.844599 ┆ 0.430635  ┆ 1.939889   ┆ 0               ┆ 0    ┆ 0       ┆ a171e61840 │\n│ …    ┆ …          ┆ …         ┆ …          ┆ …               ┆ …    ┆ …       ┆ …          │\n│ 5153 ┆ -97.241955 ┆ -1.038494 ┆ -11.017327 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n│ 5154 ┆ -95.063238 ┆ -0.655982 ┆ -10.933467 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n│ 5155 ┆ -93.635049 ┆ -0.964145 ┆ -10.906198 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n│ 5156 ┆ -92.867045 ┆ -1.088582 ┆ -11.089498 ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n│ 5157 ┆ -93.813537 ┆ -1.116631 ┆ -10.8202   ┆ 0               ┆ 0    ┆ 0       ┆ 0506d9a39f │\n└──────┴────────────┴───────────┴────────────┴─────────────────┴──────┴─────────┴────────────┘\n","output_type":"stream"}],"execution_count":13},{"cell_type":"markdown","source":"# Cast Valid/Task to integers where present","metadata":{}},{"cell_type":"code","source":"defog_df   = convert_valid_and_task(defog_df)\nnotype_df  = convert_valid_and_task(notype_df)\ntdcsfog_df = convert_valid_and_task(tdcsfog_df)\nprint(defog_df)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:14:17.216206Z","iopub.execute_input":"2025-09-19T18:14:17.216566Z","iopub.status.idle":"2025-09-19T18:14:17.470165Z","shell.execute_reply.started":"2025-09-19T18:14:17.216538Z","shell.execute_reply":"2025-09-19T18:14:17.468829Z"}},"outputs":[{"name":"stdout","text":"shape: (13_525_702, 10)\n┌────────┬───────────┬──────────┬───────────┬───┬─────────┬───────┬──────┬────────────┐\n│ Time   ┆ AccV      ┆ AccML    ┆ AccAP     ┆ … ┆ Walking ┆ Valid ┆ Task ┆ patient_id │\n│ ---    ┆ ---       ┆ ---      ┆ ---       ┆   ┆ ---     ┆ ---   ┆ ---  ┆ ---        │\n│ i64    ┆ f64       ┆ f64      ┆ f64       ┆   ┆ i64     ┆ i8    ┆ i8   ┆ str        │\n╞════════╪═══════════╪══════════╪═══════════╪═══╪═════════╪═══════╪══════╪════════════╡\n│ 0      ┆ -9.833101 ┆ 0.219382 ┆ 0.669832  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n│ 1      ┆ -9.832554 ┆ 0.188024 ┆ 0.648829  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n│ 2      ┆ -9.804885 ┆ 0.187721 ┆ 0.662298  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n│ 3      ┆ -9.787264 ┆ 0.180227 ┆ 0.670866  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n│ 4      ┆ -9.790555 ┆ 0.164025 ┆ 0.651633  ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ be9d33541d │\n│ …      ┆ …         ┆ …        ┆ …         ┆ … ┆ …       ┆ …     ┆ …    ┆ …          │\n│ 109120 ┆ -9.210807 ┆ 0.30954  ┆ -3.871049 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n│ 109121 ┆ -9.228995 ┆ 0.309714 ┆ -3.850343 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n│ 109122 ┆ -9.219534 ┆ 0.285297 ┆ -3.867594 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n│ 109123 ┆ -9.216992 ┆ 0.27516  ┆ -3.909563 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n│ 109124 ┆ -9.208502 ┆ 0.261129 ┆ -3.907498 ┆ … ┆ 0       ┆ 0     ┆ 0    ┆ 06414383cf │\n└────────┴───────────┴──────────┴───────────┴───┴─────────┴───────┴──────┴────────────┘\n","output_type":"stream"}],"execution_count":14},{"cell_type":"markdown","source":"# Band-pass filter per patient \n* Removes slow drift (<0.1 Hz) and high-frequency noise (>30 Hz) while preserving gait content.\n* Uses zero-phase filtering to keep temporal alignmnet with labels/events. ","metadata":{}},{"cell_type":"code","source":"defog_df   = apply_bandpass_to_polars(defog_df,   low_hz=0.1, high_hz=30.0, order=4)\nnotype_df  = apply_bandpass_to_polars(notype_df,  low_hz=0.1, high_hz=30.0, order=4)\ntdcsfog_df = apply_bandpass_to_polars(tdcsfog_df, low_hz=0.1, high_hz=30.0, order=4)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:14:17.471526Z","iopub.execute_input":"2025-09-19T18:14:17.472169Z","iopub.status.idle":"2025-09-19T18:15:10.037383Z","shell.execute_reply.started":"2025-09-19T18:14:17.472111Z","shell.execute_reply":"2025-09-19T18:15:10.035242Z"}},"outputs":[],"execution_count":15},{"cell_type":"markdown","source":"# Acceleration magnitude \n* Vector magnitude summarizes the intensity in one channel ","metadata":{}},{"cell_type":"code","source":"defog_df   = add_acc_magnitude(defog_df)\nnotype_df  = add_acc_magnitude(notype_df)\ntdcsfog_df = add_acc_magnitude(tdcsfog_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:15:10.040274Z","iopub.execute_input":"2025-09-19T18:15:10.040749Z","iopub.status.idle":"2025-09-19T18:15:13.746027Z","shell.execute_reply.started":"2025-09-19T18:15:10.040709Z","shell.execute_reply":"2025-09-19T18:15:13.744097Z"}},"outputs":[],"execution_count":16},{"cell_type":"markdown","source":"# Outlier Flags \n* Quick QA to inspect extreme values that might indicate hardware glitches. ","metadata":{}},{"cell_type":"code","source":"def outlier_acc_magnitude(df: pl.DataFrame) -> pl.DataFrame:\n    df_outlier = df.with_columns((pl.col('Acc_MAGNITUDE') > 30).alias('is_outlier_mag'))\n    return df_outlier.filter(pl.col(\"is_outlier_mag\") == True)\n\nprint(outlier_acc_magnitude(defog_df))\nprint(outlier_acc_magnitude(notype_df))\nprint(outlier_acc_magnitude(tdcsfog_df))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:15:13.747139Z","iopub.execute_input":"2025-09-19T18:15:13.747506Z","iopub.status.idle":"2025-09-19T18:15:15.658874Z","shell.execute_reply.started":"2025-09-19T18:15:13.747478Z","shell.execute_reply":"2025-09-19T18:15:15.657576Z"}},"outputs":[{"name":"stdout","text":"shape: (9_744_217, 12)\n┌───────┬────────────┬────────────┬─────────────┬───┬──────┬────────────┬─────────────┬────────────┐\n│ Time  ┆ AccV       ┆ AccML      ┆ AccAP       ┆ … ┆ Task ┆ patient_id ┆ Acc_MAGNITU ┆ is_outlier │\n│ ---   ┆ ---        ┆ ---        ┆ ---         ┆   ┆ ---  ┆ ---        ┆ DE          ┆ _mag       │\n│ i64   ┆ f64        ┆ f64        ┆ f64         ┆   ┆ i8   ┆ str        ┆ ---         ┆ ---        │\n│       ┆            ┆            ┆             ┆   ┆      ┆            ┆ f64         ┆ bool       │\n╞═══════╪════════════╪════════════╪═════════════╪═══╪══════╪════════════╪═════════════╪════════════╡\n│ 0     ┆ -59.771776 ┆ -58.37085  ┆ -129.343338 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.978961  ┆ true       │\n│ 1     ┆ 59.753772  ┆ 58.356426  ┆ 129.315529  ┆ … ┆ 0    ┆ be9d33541d ┆ 153.943145  ┆ true       │\n│ 2     ┆ -59.76452  ┆ -58.354606 ┆ -129.329472 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.95834   ┆ true       │\n│ 3     ┆ 59.786412  ┆ 58.372004  ┆ 129.335044  ┆ … ┆ 0    ┆ be9d33541d ┆ 153.978113  ┆ true       │\n│ 4     ┆ -59.728397 ┆ -58.350124 ┆ -129.300058 ┆ … ┆ 0    ┆ be9d33541d ┆ 153.917911  ┆ true       │\n│ …     ┆ …          ┆ …          ┆ …           ┆ … ┆ …    ┆ …          ┆ …           ┆ …          │\n│ 52925 ┆ 24.679778  ┆ -0.164453  ┆ 17.214027   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.09055    ┆ true       │\n│ 52926 ┆ -24.114548 ┆ -0.342333  ┆ -18.156683  ┆ … ┆ 0    ┆ 06414383cf ┆ 30.187642   ┆ true       │\n│ 52928 ┆ -24.911227 ┆ 0.123015   ┆ -17.233841  ┆ … ┆ 0    ┆ 06414383cf ┆ 30.291742   ┆ true       │\n│ 52931 ┆ 24.485893  ┆ 0.198116   ┆ 17.416981   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.049118   ┆ true       │\n│ 52933 ┆ 24.548891  ┆ -0.020052  ┆ 17.264139   ┆ … ┆ 0    ┆ 06414383cf ┆ 30.011647   ┆ true       │\n└───────┴────────────┴────────────┴─────────────┴───┴──────┴────────────┴─────────────┴────────────┘\nshape: (9_618_463, 10)\n┌────────┬─────────────┬────────────┬────────────┬───┬──────┬────────────┬────────────┬────────────┐\n│ Time   ┆ AccV        ┆ AccML      ┆ AccAP      ┆ … ┆ Task ┆ patient_id ┆ Acc_MAGNIT ┆ is_outlier │\n│ ---    ┆ ---         ┆ ---        ┆ ---        ┆   ┆ ---  ┆ ---        ┆ UDE        ┆ _mag       │\n│ i64    ┆ f64         ┆ f64        ┆ f64        ┆   ┆ i8   ┆ str        ┆ ---        ┆ ---        │\n│        ┆             ┆            ┆            ┆   ┆      ┆            ┆ f64        ┆ bool       │\n╞════════╪═════════════╪════════════╪════════════╪═══╪══════╪════════════╪════════════╪════════════╡\n│ 0      ┆ -105738.418 ┆ 22109.6106 ┆ 51661.2103 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119742.760 ┆ true       │\n│        ┆ 332         ┆ 42         ┆ 98         ┆   ┆      ┆            ┆ 34         ┆            │\n│ 1      ┆ 105728.7489 ┆ -22107.236 ┆ -51657.462 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119732.166 ┆ true       │\n│        ┆ 57          ┆ 239        ┆ 694        ┆   ┆      ┆            ┆ 53         ┆            │\n│ 2      ┆ -105719.132 ┆ 22104.9135 ┆ 51653.7195 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119721.631 ┆ true       │\n│        ┆ 627         ┆ 87         ┆ 51         ┆   ┆      ┆            ┆ 093        ┆            │\n│ 3      ┆ 105709.4376 ┆ -22102.541 ┆ -51649.987 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119711.021 ┆ true       │\n│        ┆ 5           ┆ 995        ┆ 425        ┆   ┆      ┆            ┆ 931        ┆            │\n│ 4      ┆ -105699.781 ┆ 22100.1691 ┆ 51646.2336 ┆ … ┆ 0    ┆ 1e8d55d48d ┆ 119700.437 ┆ true       │\n│        ┆ 5           ┆ 86         ┆ 12         ┆   ┆      ┆            ┆ 482        ┆            │\n│ …      ┆ …           ┆ …          ┆ …          ┆ … ┆ …    ┆ …          ┆ …          ┆ …          │\n│ 443491 ┆ -1.8163e6   ┆ 20009.0142 ┆ -1.0640e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1051e6   ┆ true       │\n│        ┆             ┆ 64         ┆            ┆   ┆      ┆            ┆            ┆            │\n│ 443492 ┆ 1.8162e6    ┆ -20010.075 ┆ 1.0640e6   ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1050e6   ┆ true       │\n│        ┆             ┆ 485        ┆            ┆   ┆      ┆            ┆            ┆            │\n│ 443493 ┆ -1.8188e6   ┆ 20041.3332 ┆ -1.0655e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1080e6   ┆ true       │\n│        ┆             ┆ 12         ┆            ┆   ┆      ┆            ┆            ┆            │\n│ 443494 ┆ 1.8140e6    ┆ -19990.770 ┆ 1.0628e6   ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1025e6   ┆ true       │\n│        ┆             ┆ 975        ┆            ┆   ┆      ┆            ┆            ┆            │\n│ 443495 ┆ -1.8204e6   ┆ 20063.3133 ┆ -1.0665e6  ┆ … ┆ 0    ┆ 434732a5e3 ┆ 2.1099e6   ┆ true       │\n│        ┆             ┆ 26         ┆            ┆   ┆      ┆            ┆            ┆            │\n└────────┴─────────────┴────────────┴────────────┴───┴──────┴────────────┴────────────┴────────────┘\nshape: (316_554, 10)\n┌──────┬────────────┬───────────┬────────────┬───┬─────────┬────────────┬─────────────┬────────────┐\n│ Time ┆ AccV       ┆ AccML     ┆ AccAP      ┆ … ┆ Walking ┆ patient_id ┆ Acc_MAGNITU ┆ is_outlier │\n│ ---  ┆ ---        ┆ ---       ┆ ---        ┆   ┆ ---     ┆ ---        ┆ DE          ┆ _mag       │\n│ i64  ┆ f64        ┆ f64       ┆ f64        ┆   ┆ i64     ┆ str        ┆ ---         ┆ ---        │\n│      ┆            ┆           ┆            ┆   ┆         ┆            ┆ f64         ┆ bool       │\n╞══════╪════════════╪═══════════╪════════════╪═══╪═════════╪════════════╪═════════════╪════════════╡\n│ 1715 ┆ -20.587868 ┆ -7.620407 ┆ 20.962908  ┆ … ┆ 0       ┆ a171e61840 ┆ 30.35415    ┆ true       │\n│ 1717 ┆ 14.06747   ┆ 9.151195  ┆ -25.699131 ┆ … ┆ 0       ┆ a171e61840 ┆ 30.693377   ┆ true       │\n│ 1910 ┆ 0.526905   ┆ 7.762494  ┆ 33.052152  ┆ … ┆ 0       ┆ a171e61840 ┆ 33.95554    ┆ true       │\n│ 1911 ┆ -13.311803 ┆ 20.667404 ┆ 37.910822  ┆ … ┆ 0       ┆ a171e61840 ┆ 45.183803   ┆ true       │\n│ 1914 ┆ 1.454304   ┆ -6.039686 ┆ -34.55845  ┆ … ┆ 0       ┆ a171e61840 ┆ 35.112381   ┆ true       │\n│ …    ┆ …          ┆ …         ┆ …          ┆ … ┆ …       ┆ …          ┆ …           ┆ …          │\n│ 4040 ┆ -24.176547 ┆ -6.393739 ┆ -22.537217 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 33.664692   ┆ true       │\n│ 4042 ┆ 38.757153  ┆ 2.703988  ┆ 2.812874   ┆ … ┆ 0       ┆ 0506d9a39f ┆ 38.953058   ┆ true       │\n│ 5059 ┆ -7.357523  ┆ -0.878686 ┆ -43.843425 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 44.465167   ┆ true       │\n│ 5060 ┆ -12.966388 ┆ 2.086433  ┆ -39.303495 ┆ … ┆ 0       ┆ 0506d9a39f ┆ 41.439656   ┆ true       │\n│ 5061 ┆ 3.995509   ┆ 0.397924  ┆ 29.786248  ┆ … ┆ 0       ┆ 0506d9a39f ┆ 30.055665   ┆ true       │\n└──────┴────────────┴───────────┴────────────┴───┴─────────┴────────────┴─────────────┴────────────┘\n","output_type":"stream"}],"execution_count":17},{"cell_type":"markdown","source":"# Standardize acceleration channels per patient (z-score)\n* Filtering first removes drift/spikes that would distord means/standard deviations.\n* Then z-scoring equalizes patients for fair modeling.  ","metadata":{}},{"cell_type":"code","source":"defog_df   = standardize_acc_by_patient(defog_df)\nnotype_df  = standardize_acc_by_patient(notype_df)\ntdcsfog_df = standardize_acc_by_patient(tdcsfog_df)\n\n# 10b) Check z-score outliers (|z| > 3)\nprint(detect_outliers(defog_df))\nprint(detect_outliers(notype_df))\nprint(detect_outliers(tdcsfog_df))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:15:15.660416Z","iopub.execute_input":"2025-09-19T18:15:15.660810Z","iopub.status.idle":"2025-09-19T18:15:25.541192Z","shell.execute_reply.started":"2025-09-19T18:15:15.660780Z","shell.execute_reply":"2025-09-19T18:15:25.537931Z"}},"outputs":[{"name":"stdout","text":"shape: (468_159, 11)\n┌──────┬───────────┬───────────┬───────────┬───┬───────┬──────┬────────────┬───────────────┐\n│ Time ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---  ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n│ i64  ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i8    ┆ i8   ┆ str        ┆ f64           │\n╞══════╪═══════════╪═══════════╪═══════════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n│ 0    ┆ -3.613702 ┆ -4.313352 ┆ -4.165176 ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.978961    │\n│ 1    ┆ 3.612643  ┆ 4.312322  ┆ 4.164315  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.943145    │\n│ 2    ┆ -3.613263 ┆ -4.312152 ┆ -4.16473  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.95834     │\n│ 3    ┆ 3.614617  ┆ 4.313473  ┆ 4.164943  ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.978113    │\n│ 4    ┆ -3.611079 ┆ -4.31182  ┆ -4.163782 ┆ … ┆ 0     ┆ 0    ┆ be9d33541d ┆ 153.917911    │\n│ …    ┆ …         ┆ …         ┆ …         ┆ … ┆ …     ┆ …    ┆ …          ┆ …             │\n│ 1577 ┆ 0.390441  ┆ 3.101196  ┆ 0.377114  ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 20.628529     │\n│ 1580 ┆ -0.409922 ┆ -3.22748  ┆ -0.394283 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 21.60884      │\n│ 1688 ┆ -0.398354 ┆ -3.000588 ┆ -0.445331 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 21.949696     │\n│ 1802 ┆ -0.427613 ┆ -3.023652 ┆ -0.477392 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 23.411585     │\n│ 2452 ┆ -0.524593 ┆ -3.010497 ┆ -0.581903 ┆ … ┆ 1     ┆ 1    ┆ 06414383cf ┆ 28.217266     │\n└──────┴───────────┴───────────┴───────────┴───┴───────┴──────┴────────────┴───────────────┘\nshape: (486_949, 9)\n┌───────┬───────────┬───────────┬───────────┬───┬───────┬──────┬────────────┬───────────────┐\n│ Time  ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---   ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n│ i64   ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i8    ┆ i8   ┆ str        ┆ f64           │\n╞═══════╪═══════════╪═══════════╪═══════════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n│ 0     ┆ -5.459917 ┆ 5.078533  ┆ 5.557393  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119742.76034  │\n│ 1     ┆ 5.459446  ┆ -5.078013 ┆ -5.557018 ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119732.16653  │\n│ 2     ┆ -5.458921 ┆ 5.077454  ┆ 5.556587  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119721.631093 │\n│ 3     ┆ 5.458448  ┆ -5.076935 ┆ -5.556214 ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119711.021931 │\n│ 4     ┆ -5.457922 ┆ 5.076364  ┆ 5.555782  ┆ … ┆ 0     ┆ 0    ┆ 1e8d55d48d ┆ 119700.437482 │\n│ …     ┆ …         ┆ …         ┆ …         ┆ … ┆ …     ┆ …    ┆ …          ┆ …             │\n│ 37493 ┆ -0.317898 ┆ 3.000242  ┆ -0.4967   ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0986e12     │\n│ 37494 ┆ 0.317811  ┆ -3.000202 ┆ 0.496609  ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0978e12     │\n│ 37495 ┆ -0.317752 ┆ 3.000131  ┆ -0.496546 ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0970e12     │\n│ 37496 ┆ 0.317665  ┆ -3.00009  ┆ 0.496455  ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0961e12     │\n│ 37497 ┆ -0.317606 ┆ 3.000019  ┆ -0.496391 ┆ … ┆ 0     ┆ 0    ┆ 434732a5e3 ┆ 4.0953e12     │\n└───────┴───────────┴───────────┴───────────┴───┴───────┴──────┴────────────┴───────────────┘\nshape: (267_710, 9)\n┌──────┬───────────┬───────────┬───────────┬───┬──────┬─────────┬────────────┬───────────────┐\n│ Time ┆ AccV      ┆ AccML     ┆ AccAP     ┆ … ┆ Turn ┆ Walking ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---  ┆ ---       ┆ ---       ┆ ---       ┆   ┆ ---  ┆ ---     ┆ ---        ┆ ---           │\n│ i64  ┆ f64       ┆ f64       ┆ f64       ┆   ┆ i64  ┆ i64     ┆ str        ┆ f64           │\n╞══════╪═══════════╪═══════════╪═══════════╪═══╪══════╪═════════╪════════════╪═══════════════╡\n│ 1542 ┆ -0.678575 ┆ 3.215689  ┆ 2.144167  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 19.733076     │\n│ 1609 ┆ -1.702092 ┆ -3.120664 ┆ 1.690087  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 17.382579     │\n│ 1714 ┆ -1.631935 ┆ -3.385064 ┆ 2.986406  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 26.893392     │\n│ 1715 ┆ -5.401267 ┆ -2.938399 ┆ 2.539975  ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 30.35415      │\n│ 1717 ┆ 3.690635  ┆ 3.528663  ┆ -3.113839 ┆ … ┆ 0    ┆ 0       ┆ a171e61840 ┆ 30.693377     │\n│ …    ┆ …         ┆ …         ┆ …         ┆ … ┆ …    ┆ …       ┆ …          ┆ …             │\n│ 5057 ┆ 1.384847  ┆ -0.229026 ┆ 5.568359  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 24.497433     │\n│ 5059 ┆ -1.51051  ┆ -0.340695 ┆ -10.36978 ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 44.465167     │\n│ 5060 ┆ -2.661986 ┆ 0.80892   ┆ -9.296001 ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 41.439656     │\n│ 5061 ┆ 0.820218  ┆ 0.154263  ┆ 7.045024  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 30.055665     │\n│ 5062 ┆ 1.181545  ┆ -0.724016 ┆ 5.718217  ┆ … ┆ 0    ┆ 0       ┆ 0506d9a39f ┆ 24.922224     │\n└──────┴───────────┴───────────┴───────────┴───┴──────┴─────────┴────────────┴───────────────┘\n","output_type":"stream"}],"execution_count":18},{"cell_type":"markdown","source":"# Example plot for a single patient ","metadata":{}},{"cell_type":"code","source":"example_pid = unique_defog_patients[0] if len(unique_defog_patients) > 0 else None\nif example_pid is not None:\n    df_plot = defog_df.filter(pl.col(\"patient_id\") == example_pid).to_pandas().sort_values(\"Time\")\n    plt.figure(figsize=(15, 6))\n    # Acceleration channels\n    plt.plot(df_plot['Time'], df_plot['AccV'],  label='AccV',  alpha=0.7)\n    plt.plot(df_plot['Time'], df_plot['AccML'], label='AccML', alpha=0.7)\n    plt.plot(df_plot['Time'], df_plot['AccAP'], label='AccAP', alpha=0.7)\n    # Event channels (if present)\n    for ev in [\"StartHesitation\", \"Turn\", \"Walking\"]:\n        if ev in df_plot.columns:\n            plt.plot(df_plot['Time'], df_plot[ev], label=ev, alpha=0.7)\n    plt.xlabel(\"Time (s)\")\n    plt.ylabel(\"Acceleration (m/s²)\")\n    plt.title(f\"Patient: {example_pid} - Acceleration + FOG Events (Filtered & Standardized)\")\n    plt.legend(loc=\"upper right\")\n    plt.grid(True)\n    plt.tight_layout()\n    plt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:15:25.543132Z","iopub.execute_input":"2025-09-19T18:15:25.543508Z","iopub.status.idle":"2025-09-19T18:15:27.354050Z","shell.execute_reply.started":"2025-09-19T18:15:25.543480Z","shell.execute_reply":"2025-09-19T18:15:27.352817Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":19},{"cell_type":"markdown","source":"# Dtype summmary ","metadata":{}},{"cell_type":"code","source":"print(f'DEFOG DATA TYPES:\\n{defog_df.dtypes}\\n')\nprint(f'TDCSFOG DATA TYPES:\\n{tdcsfog_df.dtypes}\\n')\nprint(f'NOTYPE DATA TYPES:\\n{notype_df.dtypes}\\n')\n\n# Null counts\nprint(defog_df.null_count())\nprint(notype_df.null_count())\nprint(tdcsfog_df.null_count())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-19T18:15:27.355149Z","iopub.execute_input":"2025-09-19T18:15:27.355462Z","iopub.status.idle":"2025-09-19T18:15:27.363850Z","shell.execute_reply.started":"2025-09-19T18:15:27.355440Z","shell.execute_reply":"2025-09-19T18:15:27.362432Z"}},"outputs":[{"name":"stdout","text":"DEFOG DATA TYPES:\n[Int64, Float64, Float64, Float64, Int64, Int64, Int64, Int8, Int8, String, Float64]\n\nTDCSFOG DATA TYPES:\n[Int64, Float64, Float64, Float64, Int64, Int64, Int64, String, Float64]\n\nNOTYPE DATA TYPES:\n[Int64, Float64, Float64, Float64, Int64, Int8, Int8, String, Float64]\n\nshape: (1, 11)\n┌──────┬──────┬───────┬───────┬───┬───────┬──────┬────────────┬───────────────┐\n│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32   ┆ u32  ┆ u32        ┆ u32           │\n╞══════╪══════╪═══════╪═══════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0     ┆ 0    ┆ 0          ┆ 0             │\n└──────┴──────┴───────┴───────┴───┴───────┴──────┴────────────┴───────────────┘\nshape: (1, 9)\n┌──────┬──────┬───────┬───────┬───┬───────┬──────┬────────────┬───────────────┐\n│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Valid ┆ Task ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---   ┆ ---  ┆ ---        ┆ ---           │\n│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32   ┆ u32  ┆ u32        ┆ u32           │\n╞══════╪══════╪═══════╪═══════╪═══╪═══════╪══════╪════════════╪═══════════════╡\n│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0     ┆ 0    ┆ 0          ┆ 0             │\n└──────┴──────┴───────┴───────┴───┴───────┴──────┴────────────┴───────────────┘\nshape: (1, 9)\n┌──────┬──────┬───────┬───────┬───┬──────┬─────────┬────────────┬───────────────┐\n│ Time ┆ AccV ┆ AccML ┆ AccAP ┆ … ┆ Turn ┆ Walking ┆ patient_id ┆ Acc_MAGNITUDE │\n│ ---  ┆ ---  ┆ ---   ┆ ---   ┆   ┆ ---  ┆ ---     ┆ ---        ┆ ---           │\n│ u32  ┆ u32  ┆ u32   ┆ u32   ┆   ┆ u32  ┆ u32     ┆ u32        ┆ u32           │\n╞══════╪══════╪═══════╪═══════╪═══╪══════╪═════════╪════════════╪═══════════════╡\n│ 0    ┆ 0    ┆ 0     ┆ 0     ┆ … ┆ 0    ┆ 0       ┆ 0          ┆ 0             │\n└──────┴──────┴───────┴───────┴───┴──────┴─────────┴────────────┴───────────────┘\n","output_type":"stream"}],"execution_count":20}]}